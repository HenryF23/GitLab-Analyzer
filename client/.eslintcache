[{"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js":"1","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js":"2","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js":"3","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js":"4","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Batch.js":"5","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js":"6","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Table.js":"7","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js":"8","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js":"9","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js":"10","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\OverviewPage.js":"11","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js":"12","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js":"13","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitGraph.js":"14","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\commitData.js":"15","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js":"16","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js":"17","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js":"18","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js":"19","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js":"20","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js":"21","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js":"22","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\overview\\BarGraph.js":"23","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js":"24","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\overview\\StackedBar.js":"25"},{"size":328,"mtime":1613775547488,"results":"26","hashOfConfig":"27"},{"size":1294,"mtime":1613793025075,"results":"28","hashOfConfig":"27"},{"size":841,"mtime":1613946214282,"results":"29","hashOfConfig":"27"},{"size":1210,"mtime":1614840584596,"results":"30","hashOfConfig":"27"},{"size":175,"mtime":1613793025076,"results":"31","hashOfConfig":"27"},{"size":167,"mtime":1613793025076,"results":"32","hashOfConfig":"27"},{"size":183,"mtime":1613793025078,"results":"33","hashOfConfig":"27"},{"size":1513,"mtime":1613791724362,"results":"34","hashOfConfig":"27"},{"size":749,"mtime":1613793025086,"results":"35","hashOfConfig":"27"},{"size":3094,"mtime":1613946214289,"results":"36","hashOfConfig":"27"},{"size":4967,"mtime":1614923570940,"results":"37","hashOfConfig":"27"},{"size":421,"mtime":1613793015687,"results":"38","hashOfConfig":"27"},{"size":2491,"mtime":1614832381101,"results":"39","hashOfConfig":"27"},{"size":4349,"mtime":1613946214248,"results":"40","hashOfConfig":"27"},{"size":6310,"mtime":1613963384694,"results":"41","hashOfConfig":"27"},{"size":2624,"mtime":1613963384689,"results":"42","hashOfConfig":"27"},{"size":1618,"mtime":1613946214274,"results":"43","hashOfConfig":"27"},{"size":4447,"mtime":1613946214260,"results":"44","hashOfConfig":"27"},{"size":2944,"mtime":1613946214268,"results":"45","hashOfConfig":"27"},{"size":1845,"mtime":1614832363473,"results":"46","hashOfConfig":"27"},{"size":732,"mtime":1613793025323,"results":"47","hashOfConfig":"27"},{"size":828,"mtime":1613891466354,"results":"48","hashOfConfig":"27"},{"size":1631,"mtime":1614923328561,"results":"49","hashOfConfig":"27"},{"size":2996,"mtime":1614641320856,"results":"50","hashOfConfig":"27"},{"size":1993,"mtime":1614923671951,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"16t6km4",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js",[],["108","109"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js",["110"],"import React from 'react';\r\nimport { Navbar, Nav, Link} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport FloatBar from './floatbar/FloatBar';\r\nimport Logo from './Logo';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <FloatBar />\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/overview\" test=\"hello\">\r\n              <Nav.Link>Overview</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/commits\">\r\n              <Nav.Link>Commits & MRs</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/table\">\r\n              <Nav.Link>Issues & Reviews</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/batch\">\r\n              <Nav.Link>Batch Processing</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/config\">\r\n              <Nav.Link>Config</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Batch.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Table.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js",["111","112"],"import React, { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport '../Shared.css';\r\nimport Logo from '../components/Logo';\r\nimport LoginBar from '../components/login/LoginBar';\r\nimport SearchBar from '../components/login/SearchBar';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { Button, Alert, Layout, Spin } from 'antd';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\nimport Repo from '../components/login/Repo';\r\n\r\nconst { Content } = Layout;\r\n\r\nfunction LoginPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const { user, setUser, repo, setRepo, incorrect } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (sessionStorage.getItem('user')) {\r\n      setUser(sessionStorage.getItem('user'));\r\n    }\r\n  }, [user, setUser]);\r\n\r\n  const handleLogOut = (e) => {\r\n    e.preventDefault();\r\n    sessionStorage.removeItem('user');\r\n    setRepo(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const loadingContainer = () => {\r\n    if (loading) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Loading ...\">\r\n            <Alert\r\n              message=\"Loading repository list\"\r\n              description=\"Please wait while we retrieve your repository information.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else if (analyzing && user) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Analyzing...\">\r\n            <Alert\r\n              message=\"Analzying selected repository\"\r\n              description=\"Please wait while we analyze your selected repository.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const disclaimerContainer = !user ? (\r\n    <div>\r\n      <p style={{ textAlign: 'center', margin: 'auto' }}>\r\n        Disclaimer: This is a development mode application. Please only use the\r\n        provided GitLab token and URL to test the application.{' '}\r\n      </p>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main_container\">\r\n        <div className=\"center\">\r\n          <div className=\"m-bot\">\r\n            <Logo />\r\n          </div>\r\n          {user ? (\r\n            <Button\r\n              onClick={handleLogOut}\r\n              icon={<LogoutOutlined />}\r\n              style={{ float: 'right' }}\r\n              size=\"large\"\r\n            >\r\n              Log Out\r\n            </Button>\r\n          ) : null}\r\n          {user ? <SearchBar setLoading={setLoading} /> : <LoginBar />}\r\n          {loadingContainer()}\r\n          {repo ? <Repo setAnalyzing={setAnalyzing} repo={repo} /> : null}\r\n          {/* {disclaimerContainer} */}\r\n          {incorrect ? (\r\n            <Alert\r\n              message=\"Access token or url wrong, please try again\"\r\n              type=\"error\"\r\n              showIcon\r\n            />\r\n          ) : (\r\n            <p></p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\OverviewPage.js",["113","114","115"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitGraph.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\commitData.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js",["116","117","118","119","120"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Popover, Checkbox, List, Avatar, Button, Skeleton } from 'antd';\r\nimport { fetchData } from './commitData';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\n// Used boilerplate from https://ant.design/components/list/\r\nconst CommitBar = ({ username }) => {\r\n  const [commits, setCommits] = useState([]);\r\n  const [hover, setHover] = useState({ visible: false });\r\n  const { selectUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    getFakeData();\r\n  }, []);\r\n\r\n  const getFakeData = async () => {\r\n    const data = await fetchData();\r\n    setCommits(data);\r\n  };\r\n\r\n  const hide = () => {\r\n    setHover({ visible: false });\r\n  };\r\n\r\n  const handleVisibleChange = (visible) => {\r\n    setHover({ visible });\r\n  };\r\n\r\n  const filterCommits = (username, commits) => {\r\n    const filteredCommits = commits.filter((commit) => {\r\n      return commit.username === username;\r\n    });\r\n    return filteredCommits;\r\n  };\r\n\r\n  const getDataSource = () => {\r\n    if (selectUser === '@everyone') {\r\n      return commits;\r\n    } else {\r\n      return filterCommits(selectUser, commits);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <List\r\n      className=\"demo-loadmore-list\"\r\n      // loading={initLoading}\r\n      itemLayout=\"horizontal\"\r\n      // loadMore={loadMore}\r\n      pagination={{\r\n        onChange: (page) => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 8,\r\n      }}\r\n      dataSource={getDataSource()}\r\n      renderItem={(commits) => (\r\n        <List.Item\r\n          actions={[\r\n            <Button size=\"small\" type=\"primary\">\r\n              commits\r\n            </Button>,\r\n            // <Popover\r\n            //   content={<a onClick={hide}>Close</a>}\r\n            //   title=\"Title\"\r\n            //   trigger=\"click\"\r\n            //   visible={hover.visible}\r\n            //   onVisibleChange={handleVisibleChange}\r\n            // >\r\n            <Button ghost size=\"small\" type=\"primary\">\r\n              details\r\n            </Button>,\r\n            // </Popover>,\r\n            <Checkbox>ignore</Checkbox>,\r\n          ]}\r\n        >\r\n          {/* <Skeleton avatar title={false} loading={item.loading} active> */}\r\n          <List.Item.Meta\r\n            avatar={<Avatar shape=\"square\" size=\"large\" src={commits.avatar} />}\r\n            title={<a href=\"/commits\">{commits.title}</a>}\r\n            description={`${commits.username} Updated: ${commits.date}`}\r\n          />\r\n          <div>{commits.weighting}%</div>\r\n          {/* </Skeleton> */}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommitBar;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js",["121","122","123","124"],"import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport { Input } from 'antd';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport axios from 'axios';\r\n\r\nconst { Search } = Input;\r\n\r\nconst SearchBarComp = ({ setLoading }) => {\r\n  const [value, setValue] = useState('');\r\n  const [reList, setReList] = useState([]);\r\n\r\n  const { user, repo, setRepo } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const getRepos = async () => {\r\n      setLoading(true);\r\n      const repoList = await axios.get('http://localhost:5678/getProjectList');\r\n      setRepo(repoList.data.value);\r\n      setReList([\r\n        repoList.data.value,\r\n        'Administrator / Earth GitLab 373',\r\n        'Administrator / Mars GitLab 373',\r\n        'Administrator / Jupiter GitLab 373',\r\n      ]);\r\n      setLoading(false);\r\n    };\r\n    getRepos();\r\n  }, [setRepo]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (user) {\r\n      console.log('Logged in');\r\n    } else {\r\n      console.log('Logged Out');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"bar_container\">\r\n        <form className=\"flex\" onSubmit={handleSubmit}>\r\n          <Search\r\n            style={{ width: '650px' }}\r\n            placeholder=\"Search a repository\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onChange={(event) => {\r\n              setValue(event.target.value);\r\n            }}\r\n            // onSearch={onSearch}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarComp;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\overview\\BarGraph.js",["125"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js",["126"],"import React from \"react\";\r\nimport { Progress } from 'antd';\r\nimport Data from './FloatBarData.json';\r\nimport './IndividualScore.css';\r\n\r\nvar FloatBarData = Data.users;\r\n\r\nfunction IndividualScore(props) {\r\n    return (\r\n       <div>\r\n            {FloatBarData.map((Detail) => {\r\n                if (Detail.username === props.children){\r\n                    <div>{Detail.username}</div>\r\n                    return (\r\n                        <div className=\"score-container\">\r\n                            <div className=\"rank\">rank #</div>\r\n                            <div className=\"individualscore\">\r\n                                {/* <div>{Detail.username}</div> */}\r\n                                <div className=\"smallscore\">\r\n                                    <div className=\"numberscore\">{Detail.score}</div>\r\n                                    <div className=\"scoretext\">weighted score</div>\r\n                                    <div className=\"progressbar\">\r\n                                        <Progress percent={Detail.score%100} size=\"small\" status=\"active\" strokeColor=\"#00ABFF\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"smallscore\">\r\n                                    <div className=\"numberscore\">{Detail.number_commits}</div>\r\n                                    <div className=\"scoretext\">commits</div>\r\n                                    <div className=\"progressbar\">\r\n                                        <Progress percent={Detail.number_commits%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"smallscore\">\r\n                                    <div className=\"numberscore\">{Detail.lines_of_code}</div>\r\n                                    <div className=\"scoretext\">lines of code</div>\r\n                                    <div className=\"progressbar\">\r\n                                        <Progress percent={Detail.lines_of_code%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\"/>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"smallscore\">\r\n                                    <div className=\"numberscore\">{Detail.number_issues}</div>\r\n                                    <div className=\"scoretext\">issues & reviews</div>\r\n                                    <div className=\"progressbar\">\r\n                                        <Progress percent={Detail.number_issues%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\"/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>                        \r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndividualScore;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\overview\\StackedBar.js",["127"],{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":2,"column":23,"nodeType":"134","messageId":"135","endLine":2,"endColumn":27},{"ruleId":"132","severity":1,"message":"136","line":12,"column":9,"nodeType":"134","messageId":"135","endLine":12,"endColumn":16},{"ruleId":"132","severity":1,"message":"137","line":62,"column":9,"nodeType":"134","messageId":"135","endLine":62,"endColumn":28},{"ruleId":"132","severity":1,"message":"138","line":26,"column":23,"nodeType":"134","messageId":"135","endLine":26,"endColumn":35},{"ruleId":"132","severity":1,"message":"139","line":27,"column":21,"nodeType":"134","messageId":"135","endLine":27,"endColumn":31},{"ruleId":"132","severity":1,"message":"140","line":56,"column":25,"nodeType":"134","messageId":"135","endLine":56,"endColumn":39},{"ruleId":"132","severity":1,"message":"141","line":3,"column":10,"nodeType":"134","messageId":"135","endLine":3,"endColumn":17},{"ruleId":"132","severity":1,"message":"142","line":3,"column":51,"nodeType":"134","messageId":"135","endLine":3,"endColumn":59},{"ruleId":"132","severity":1,"message":"143","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"144","line":22,"column":9,"nodeType":"134","messageId":"135","endLine":22,"endColumn":13},{"ruleId":"132","severity":1,"message":"145","line":26,"column":9,"nodeType":"134","messageId":"135","endLine":26,"endColumn":28},{"ruleId":"132","severity":1,"message":"146","line":10,"column":10,"nodeType":"134","messageId":"135","endLine":10,"endColumn":15},{"ruleId":"132","severity":1,"message":"147","line":11,"column":10,"nodeType":"134","messageId":"135","endLine":11,"endColumn":16},{"ruleId":"132","severity":1,"message":"148","line":13,"column":17,"nodeType":"134","messageId":"135","endLine":13,"endColumn":21},{"ruleId":"149","severity":1,"message":"150","line":29,"column":6,"nodeType":"151","endLine":29,"endColumn":15,"suggestions":"152"},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},{"ruleId":"154","severity":1,"message":"155","line":11,"column":40,"nodeType":"156","messageId":"157","endLine":11,"endColumn":42},{"ruleId":"132","severity":1,"message":"153","line":1,"column":17,"nodeType":"134","messageId":"135","endLine":1,"endColumn":26},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Content' is assigned a value but never used.","'disclaimerContainer' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'setIssueSeries' is assigned a value but never used.","'Popover' is defined but never used.","'Skeleton' is defined but never used.","'hover' is assigned a value but never used.","'hide' is assigned a value but never used.","'handleVisibleChange' is assigned a value but never used.","'value' is assigned a value but never used.","'reList' is assigned a value but never used.","'repo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setLoading'. Either include it or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["160"],"'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},"Update the dependencies array to be: [setLoading, setRepo]",{"range":"163","text":"164"},[859,868],"[setLoading, setRepo]"]