[{"/home/jdtan/gitlabanalyzer/client/src/index.js":"1","/home/jdtan/gitlabanalyzer/client/src/App.js":"2","/home/jdtan/gitlabanalyzer/client/src/context/AuthContext.js":"3","/home/jdtan/gitlabanalyzer/client/src/components/Header.js":"4","/home/jdtan/gitlabanalyzer/client/src/components/Batch.js":"5","/home/jdtan/gitlabanalyzer/client/src/components/Table.js":"6","/home/jdtan/gitlabanalyzer/client/src/components/Config.js":"7","/home/jdtan/gitlabanalyzer/client/src/pages/LoginPage.js":"8","/home/jdtan/gitlabanalyzer/client/src/pages/CommitPage.js":"9","/home/jdtan/gitlabanalyzer/client/src/pages/SearchPage.js":"10","/home/jdtan/gitlabanalyzer/client/src/pages/OverviewPage.js":"11","/home/jdtan/gitlabanalyzer/client/src/components/Logo.js":"12","/home/jdtan/gitlabanalyzer/client/src/components/login/SearchBar.js":"13","/home/jdtan/gitlabanalyzer/client/src/components/login/Repo.js":"14","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/FloatBar.js":"15","/home/jdtan/gitlabanalyzer/client/src/components/commits/CommitBar.js":"16","/home/jdtan/gitlabanalyzer/client/src/components/commits/CommitGraph.js":"17","/home/jdtan/gitlabanalyzer/client/src/components/overview/StackedBarGraph.js":"18","/home/jdtan/gitlabanalyzer/client/src/components/commits/commitData.js":"19","/home/jdtan/gitlabanalyzer/client/src/components/login/LoginBar.js":"20","/home/jdtan/gitlabanalyzer/client/src/components/overview/Heatmap.js":"21","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/EveryoneScore.js":"22","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/IndividualScore.js":"23","/home/jdtan/gitlabanalyzer/client/src/components/login/BarStyles.js":"24","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/ScoreCalculator.js":"25","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/Scroll.js":"26"},{"size":314,"mtime":1613773818277,"results":"27","hashOfConfig":"28"},{"size":1319,"mtime":1615025966420,"results":"29","hashOfConfig":"28"},{"size":809,"mtime":1613960483580,"results":"30","hashOfConfig":"28"},{"size":1154,"mtime":1614940339310,"results":"31","hashOfConfig":"28"},{"size":164,"mtime":1613800141397,"results":"32","hashOfConfig":"28"},{"size":172,"mtime":1613800141397,"results":"33","hashOfConfig":"28"},{"size":156,"mtime":1613800141397,"results":"34","hashOfConfig":"28"},{"size":1308,"mtime":1615025966430,"results":"35","hashOfConfig":"28"},{"size":1459,"mtime":1615025966430,"results":"36","hashOfConfig":"28"},{"size":3314,"mtime":1615025966430,"results":"37","hashOfConfig":"28"},{"size":6085,"mtime":1614940339310,"results":"38","hashOfConfig":"28"},{"size":404,"mtime":1613780961167,"results":"39","hashOfConfig":"28"},{"size":1195,"mtime":1615025966430,"results":"40","hashOfConfig":"28"},{"size":2800,"mtime":1615025966420,"results":"41","hashOfConfig":"28"},{"size":3037,"mtime":1615357323440,"results":"42","hashOfConfig":"28"},{"size":2532,"mtime":1615025966420,"results":"43","hashOfConfig":"28"},{"size":4176,"mtime":1615025966420,"results":"44","hashOfConfig":"28"},{"size":2022,"mtime":1614940339310,"results":"45","hashOfConfig":"28"},{"size":6094,"mtime":1615025966420,"results":"46","hashOfConfig":"28"},{"size":4273,"mtime":1615025966420,"results":"47","hashOfConfig":"28"},{"size":3098,"mtime":1614940339310,"results":"48","hashOfConfig":"28"},{"size":1966,"mtime":1615347003830,"results":"49","hashOfConfig":"28"},{"size":2943,"mtime":1615250166370,"results":"50","hashOfConfig":"28"},{"size":695,"mtime":1613800141407,"results":"51","hashOfConfig":"28"},{"size":146,"mtime":1615025966420,"results":"52","hashOfConfig":"28"},{"size":803,"mtime":1613891297197,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"anfht7",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"56"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/home/jdtan/gitlabanalyzer/client/src/index.js",[],["114","115"],"/home/jdtan/gitlabanalyzer/client/src/App.js",[],"/home/jdtan/gitlabanalyzer/client/src/context/AuthContext.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/Header.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/Batch.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/Table.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/Config.js",[],"/home/jdtan/gitlabanalyzer/client/src/pages/LoginPage.js",[],"/home/jdtan/gitlabanalyzer/client/src/pages/CommitPage.js",[],"/home/jdtan/gitlabanalyzer/client/src/pages/SearchPage.js",["116"],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport '../Shared.css';\nimport Logo from '../components/Logo';\nimport SearchBar from '../components/login/SearchBar';\nimport { Button, Alert, Spin } from 'antd';\nimport { useAuth } from '../context/AuthContext';\nimport Repo from '../components/login/Repo';\nimport { LogoutOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\n\nfunction SearchPage() {\n  const [loading, setLoading] = useState(false);\n  const [analyzing, setAnalyzing] = useState(false);\n  const { user, setUser, setRepo } = useAuth();\n  const [reList, setReList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n\n  useEffect(() => {\n    const getRepos = async () => {\n      setLoading(true);\n      const repoList = await axios.get('http://localhost:5678/getProjectList');\n      setRepo(repoList.data.value);\n      setReList([\n        ...repoList.data.value,\n        'Administrator / Earth GitLab 373',\n        'Administrator / Mars GitLab 373',\n        'Administrator / Jupiter GitLab 373',\n      ]);\n      setFilteredList([\n        ...repoList.data.value,\n        'Administrator / Earth GitLab 373',\n        'Administrator / Mars GitLab 373',\n        'Administrator / Jupiter GitLab 373',\n      ]);\n      setLoading(false);\n    };\n    getRepos();\n  }, []);\n\n  const handleLogOut = (e) => {\n    e.preventDefault();\n    sessionStorage.removeItem('user');\n    setRepo(null);\n    setUser(null);\n  };\n\n  const loadingContainer = () => {\n    if (loading) {\n      return (\n        <div style={{ margin: '50px' }}>\n          <Spin tip=\"Loading ...\">\n            <Alert\n              message=\"Loading repository list\"\n              description=\"Please wait while we retrieve your repository information.\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      );\n    } else if (analyzing && user) {\n      return (\n        <div style={{ margin: '50px' }}>\n          <Spin tip=\"Analyzing...\">\n            <Alert\n              message=\"Analzying selected repository\"\n              description=\"Please wait while we analyze your selected repository.\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  if (user) {\n    return (\n      <div className=\"main_container\">\n        <div className=\"rightalign\">\n          <Button\n            type=\"primary\"\n            onClick={handleLogOut}\n            icon={<LogoutOutlined />}\n            className=\"logout\"\n            size=\"large\"\n          >\n            Log Out\n          </Button>\n        </div>\n        <div className=\"App\">\n          <div className=\"center\">\n            <div className=\"m-bot\">\n              <Logo />\n            </div>\n            <SearchBar\n              reList={reList}\n              setLoading={setLoading}\n              setFilteredList={setFilteredList}\n              filteredList={filteredList}\n            />\n            {loadingContainer()}\n            <Repo\n              setAnalyzing={setAnalyzing}\n              filteredList={filteredList}\n              setFilteredList={setFilteredList}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nexport default SearchPage;\n","/home/jdtan/gitlabanalyzer/client/src/pages/OverviewPage.js",["117","118"],"import React, {useState} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport StackedBar from '../components/overview/StackedBarGraph'\nimport Heatmap from '../components/overview/Heatmap'\nimport { Menu, Dropdown, Button } from 'antd';\nimport {DownOutlined} from '@ant-design/icons'\nimport 'antd/dist/antd.css';\n\n\n/* could probably move some of this stuff into other components */\n\nconst useStyles = makeStyles((theme) =>({\n    root: {\n        fontFamily: 'Comfortaa'\n    },\n    grid: {\n      width: '100%',\n      margin:'0px',\n      padding: 25,\n      textAlign: 'left',\n    }\n  }));\n\nconst Overview = () => {\n    const [startDate, setStartDate] = useState('Jan 2021')\n    const [endDate, setEndDate] = useState('Mar 2021')\n    const [menuSelection, setMenuSelection] = useState('Commits')\n    const classes = useStyles();\n\n    // will be replaced once we find out how to get data from backend\n    const data = [[44, 55, 41, 67, 22, 43, 0, 30, 10, 10], \n                    [13, 23, 20, 8, 13, 27, 0, 30, 10, 10],\n                    [11, 17, 15, 15, 21, 14, 0, 30, 10, 10],\n                    [21, 7, 25, 13, 22, 8, 0, 30, 10, 10],\n                    [44, 55, 41, 67, 22, 43, 0, 30, 10, 10], \n                    [13, 23, 20, 8, 13, 27, 0, 30, 10, 10],\n                    [11, 17, 15, 15, 21, 14, 0, 30, 10, 10],\n                    [21, 7, 25, 13, 22, 8, 0, 30, 10, 10]\n                   ];\n\n    const [series, setSeries] = useState([{\n      name: '@bfraser',\n      data: data[0]\n    }, {\n      name: '@khangura',\n      data: data[1]\n    }, {\n      name: '@gbaker',\n      data: data[2]\n    }, {\n      name: '@afraser',\n      data: data[3]\n    }, {\n      name: '@cfraser',\n      data: data[0]\n    }, {\n      name: '@dfraser',\n      data: data[1]\n    }, {\n      name: '@efraser',\n      data: data[2]\n    }, {\n      name: '@ffraser',\n      data: data[3]\n    }\n    ])\n\n    const handleMenuClick = (e) => {\n      console.log('Key test:', e);\n      if(e.key === \"commits\") {\n        setMenuSelection(\"Commits\")\n        setSeries([{\n          name: '@bfraser',\n          data: data[0]\n        }, {\n          name: '@khangura',\n          data: data[1]\n        }, {\n          name: '@gbaker',\n          data: data[2]\n        }, {\n          name: '@afraser',\n          data: data[3]\n        }, {\n          name: '@cfraser',\n          data: data[0]\n        }, {\n          name: '@dfraser',\n          data: data[1]\n        }, {\n          name: '@efraser',\n          data: data[2]\n        }, {\n          name: '@ffraser',\n          data: data[3]\n        }\n        ])\n      } else if (e.key === \"mergereqs\") {\n        setMenuSelection(\"Merge Reqs\")\n        setSeries([{\n          name: '@bfraser',\n          data: data[6]\n        }, {\n          name: '@khangura',\n          data: data[3]\n        }, {\n          name: '@gbaker',\n          data: data[1]\n        }, {\n          name: '@afraser',\n          data: data[4]\n        }, {\n          name: '@cfraser',\n          data: data[5]\n        }, {\n          name: '@dfraser',\n          data: data[0]\n        }, {\n          name: '@efraser',\n          data: data[1]\n        }, {\n          name: '@ffraser',\n          data: data[3]\n        }\n        ])\n      } else if (e.key ===\"issues\") {\n        setMenuSelection(\"Issues\")\n        setSeries([{\n          name: '@bfraser',\n          data: data[3]\n        }, {\n          name: '@khangura',\n          data: data[5]\n        }, {\n          name: '@gbaker',\n          data: data[3]\n        }, {\n          name: '@afraser',\n          data: data[2]\n        }, {\n          name: '@cfraser',\n          data: data[1]\n        }, {\n          name: '@dfraser',\n          data: data[6]\n        }, {\n          name: '@efraser',\n          data: data[3]\n        }, {\n          name: '@ffraser',\n          data: data[2]\n        }\n        ])\n      } else {\n        setSeries([{\n          name: '@bfraser',\n          data: data[1]\n        }, {\n          name: '@khangura',\n          data: data[1]\n        }, {\n          name: '@gbaker',\n          data: data[3]\n        }, {\n          name: '@afraser',\n          data: data[3]\n        }, {\n          name: '@cfraser',\n          data: data[3]\n        }, {\n          name: '@dfraser',\n          data: data[5]\n        }, {\n          name: '@efraser',\n          data: data[5]\n        }, {\n          name: '@ffraser',\n          data: data[6]\n        }\n        ])\n        setMenuSelection(\"Reviews\")\n      }\n \n    };\n\n    const menu = (\n      <Menu onClick={handleMenuClick} >\n        <Menu.Item key=\"commits\">Commits</Menu.Item>\n        <Menu.Item key=\"mergereqs\">Merge Reqs</Menu.Item>\n        <Menu.Item key=\"issues\">Issues</Menu.Item>\n        <Menu.Item key=\"code_reviews\">Reviews</Menu.Item>\n      </Menu>\n    )\n    return (\n        <div>\n            <Grid container className={classes.grid}>\n            <Grid item xs={12}>                    \n                        <b>Commit Count from {startDate} to {endDate}</b>\n            </Grid>\n            <Grid item xs={10}>\n                        <StackedBar series={series}/>\n            </Grid>\n            <Grid item xs={2}>\n                      <Dropdown overlay={menu}>\n                <Button>\n                  {menuSelection} <DownOutlined />\n                </Button>\n              </Dropdown>\n            </Grid>\n            <Grid item xs={12}>                    \n                        <b>x Contributions This Year</b>\n            </Grid>\n            <Grid item xs={12}>\n                        <Heatmap />\n            </Grid>\n            <Grid item xs={12}>\n                        <b>Top 10 Merge Requests and Commits</b>\n                        <ol>\n                            <li>@user1: Code Score of 10000, 100 additions, 0 deletions</li>\n                            <li>@user2: Code Score of 500, 2 additions, 0 deletions</li>\n                            <li>@user3: Code Score of 1, 1 additions, 0 deletions</li>\n                        </ol>\n            </Grid>\n\n            </Grid>\n        </div>\n    )\n}\n\nexport default Overview\n","/home/jdtan/gitlabanalyzer/client/src/components/Logo.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/login/SearchBar.js",["119","120"],"import React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport { Input } from 'antd';\nimport { useAuth } from '../../context/AuthContext';\n\nconst { Search } = Input;\n\nconst SearchBarComp = ({ reList, setFilteredList }) => {\n  const [value, setValue] = useState('');\n\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (value === '') {\n      setFilteredList(reList);\n    } else {\n      setFilteredList(\n        reList.filter((repo) =>\n          repo.toLowerCase().includes(value.toLowerCase())\n        )\n      );\n    }\n  }, [value]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  };\n\n  const handleOnChange = async (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"bar_container\">\n        <form className=\"flex\" onSubmit={handleSubmit}>\n          <Search\n            value={value}\n            style={{ width: '650px' }}\n            placeholder=\"Search a repository\"\n            allowClear\n            enterButton=\"Search\"\n            size=\"large\"\n            onChange={handleOnChange}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBarComp;\n","/home/jdtan/gitlabanalyzer/client/src/components/login/Repo.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/floatbar/FloatBar.js",["121"],"/home/jdtan/gitlabanalyzer/client/src/components/commits/CommitBar.js",["122","123","124","125","126"],"import React, { useEffect, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Popover, Checkbox, List, Avatar, Button, Skeleton } from 'antd';\nimport { fetchData } from './commitData';\nimport { useAuth } from '../../context/AuthContext';\n\n// Used boilerplate from https://ant.design/components/list/\nconst CommitBar = ({ username }) => {\n  const [commits, setCommits] = useState([]);\n  const [hover, setHover] = useState({ visible: false });\n  const { selectUser } = useAuth();\n\n  useEffect(() => {\n    getFakeData();\n  }, []);\n\n  const getFakeData = async () => {\n    const data = await fetchData();\n    setCommits(data);\n  };\n\n  const hide = () => {\n    setHover({ visible: false });\n  };\n\n  const handleVisibleChange = (visible) => {\n    setHover({ visible });\n  };\n\n  const filterCommits = (username, commits) => {\n    const filteredCommits = commits.filter((commit) => {\n      return commit.username === username;\n    });\n    return filteredCommits;\n  };\n\n  const getDataSource = () => {\n    if (selectUser === '@everyone') {\n      return commits;\n    } else {\n      return filterCommits(selectUser, commits);\n    }\n  };\n\n  return (\n    <List\n      className=\"demo-loadmore-list\"\n      // loading={initLoading}\n      itemLayout=\"horizontal\"\n      // loadMore={loadMore}\n      pagination={{\n        onChange: (page) => {\n          console.log(page);\n        },\n        pageSize: 8,\n      }}\n      dataSource={getDataSource()}\n      renderItem={(commits) => (\n        <List.Item\n          actions={[\n            <Button size=\"small\" type=\"primary\">\n              commits\n            </Button>,\n            // <Popover\n            //   content={<a onClick={hide}>Close</a>}\n            //   title=\"Title\"\n            //   trigger=\"click\"\n            //   visible={hover.visible}\n            //   onVisibleChange={handleVisibleChange}\n            // >\n            <Button ghost size=\"small\" type=\"primary\">\n              details\n            </Button>,\n            // </Popover>,\n            <Checkbox>ignore</Checkbox>,\n          ]}\n        >\n          {/* <Skeleton avatar title={false} loading={item.loading} active> */}\n          <List.Item.Meta\n            avatar={<Avatar shape=\"square\" size=\"large\" src={commits.avatar} />}\n            title={<a href=\"/commits\">{commits.title}</a>}\n            description={`${commits.username} Updated: ${commits.date}`}\n          />\n          <div>{commits.weighting}%</div>\n          {/* </Skeleton> */}\n        </List.Item>\n      )}\n    />\n  );\n};\n\nexport default CommitBar;\n","/home/jdtan/gitlabanalyzer/client/src/components/commits/CommitGraph.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/overview/StackedBarGraph.js",["127"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\n\nclass StackedBar extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        options: {\n          colors: ['#F1E2AB', '#ABB2F1', '#ABF1DC', '#C7EBFF', '#D7ECD9', '#F5D5CB', '#F6ECF5', '#F3DDF2'],\n        //   stroke: {\n        //     show: true,\n        //     curve: 'smooth',\n        //     lineCap: 'butt',\n        //     colors: ['#CBB97B', '#7F87CF', '#55FFCC', '#6AB1D9', '#489850', '#bb4824', '#a34d9a', '#ab3ca6'],\n        //     width: 1,\n        //     dashArray: 0,      \n        // },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            type: 'bar',\n            height: 350,\n            stacked: true,\n          },\n          dataLabels: {\n            enabled: false\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: 'bottom',\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }],\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              horizontal: false,\n              endingShape: 'flat'\n            }\n          },\n          xaxis: {\n            categories: ['J1', 'J2', 'J3', 'J4', 'F1',\n            'F2', 'F3', 'F4', 'M1', 'M2'\n            ],\n          },\n          legend: {\n            position: 'right',\n            offsetY: 40,\n            onItemClick: {\n              toggleDataSeries: false\n            }\n          },\n          fill: {\n            type: 'solid',\n            opacity: 1\n          }\n        },\n      \n      \n      };\n    }\n\n  \n\n    render() {\n      console.log(this.props)\n\n      return (\n        \n\n  <div id=\"chart\">\n<Chart options={this.state.options} series={this.props.series} type=\"bar\" height={350} />\n</div>\n\n\n      );\n    }\n  }\n\nexport default StackedBar","/home/jdtan/gitlabanalyzer/client/src/components/commits/commitData.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/login/LoginBar.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/overview/Heatmap.js",["128"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\n// adapted from: https://apexcharts.com/react-chart-demos/heatmap-charts/basic/\n\n//still hard coded data, low priority feature\nclass Heatmap extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        series: [{\n          name: '',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: 'F',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: '',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: 'W',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: '',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: 'M',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        },\n        {\n          name: '',\n          data: [5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10, \n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5, 50, 20,40, 10,\n            5, 10, 15, 20, 50, 30, 10, 70, 30, 5,]\n        }\n        ],\n        options: {\n          chart: {\n              toolbar: {\n                show: false\n              },\n            height: 350,\n            type: 'heatmap',\n          },\n          dataLabels: {\n            enabled: false\n          },\n          colors: [\"#8C90AA\"],\n          xaxis: {\n            type: 'category',\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n            'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'\n            ],\n          },\n        },\n      };\n    }\n\n  \n\n    render() {\n      return (\n        \n\n  <div id=\"chart\">\n<Chart options={this.state.options} series={this.state.series} type=\"heatmap\" height={200} />\n</div>\n\n\n      );\n    }\n  }\n\n  export default Heatmap","/home/jdtan/gitlabanalyzer/client/src/components/floatbar/EveryoneScore.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/floatbar/IndividualScore.js",["129"],"import React from \"react\";\nimport { Progress } from 'antd';\nimport Data from './FloatBarData.json';\nimport './IndividualScore.css';\n\nvar FloatBarData = Data.users;\n\nfunction IndividualScore(props) {\n    return (\n       <div>\n            {FloatBarData.map((Detail) => {\n                if (Detail.username === props.children){\n                    <div>{Detail.username}</div>\n                    return (\n                        <div className=\"score-container\">\n                            <div className=\"rank\">rank #</div>\n                            <div className=\"individualscore\">\n                                {/* <div>{Detail.username}</div> */}\n                                <div className=\"smallscore\">\n                                    <div className=\"numberscore\">{Detail.score}</div>\n                                    <div className=\"scoretext\">weighted score</div>\n                                    <div className=\"progressbar\">\n                                        <Progress percent={Detail.score%100} size=\"small\" status=\"active\" strokeColor=\"#00ABFF\" />\n                                    </div>\n                                </div>\n                                <div className=\"smallscore\">\n                                    <div className=\"numberscore\">{Detail.number_commits}</div>\n                                    <div className=\"scoretext\">commits</div>\n                                    <div className=\"progressbar\">\n                                        <Progress percent={Detail.number_commits%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\" />\n                                    </div>\n                                </div>\n                                <div className=\"smallscore\">\n                                    <div className=\"numberscore\">{Detail.lines_of_code}</div>\n                                    <div className=\"scoretext\">lines of code</div>\n                                    <div className=\"progressbar\">\n                                        <Progress percent={Detail.lines_of_code%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\" />\n                                    </div>\n                                </div>\n                                <div className=\"smallscore\">\n                                    <div className=\"numberscore\">{Detail.number_issues}</div>\n                                    <div className=\"scoretext\">issues & reviews</div>\n                                    <div className=\"progressbar\">\n                                        <Progress percent={Detail.number_issues%100} size=\"small\" status=\"active\" strokeColor=\"#85D6FE\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>                        \n                    );\n                }\n            })}\n        </div>\n    );\n}\n\nexport default IndividualScore;","/home/jdtan/gitlabanalyzer/client/src/components/login/BarStyles.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/floatbar/ScoreCalculator.js",[],"/home/jdtan/gitlabanalyzer/client/src/components/floatbar/Scroll.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":40,"column":6,"nodeType":"136","endLine":40,"endColumn":8,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":26,"column":23,"nodeType":"140","messageId":"141","endLine":26,"endColumn":35},{"ruleId":"138","severity":1,"message":"142","line":27,"column":21,"nodeType":"140","messageId":"141","endLine":27,"endColumn":31},{"ruleId":"138","severity":1,"message":"143","line":11,"column":11,"nodeType":"140","messageId":"141","endLine":11,"endColumn":15},{"ruleId":"134","severity":1,"message":"144","line":23,"column":6,"nodeType":"136","endLine":23,"endColumn":13,"suggestions":"145"},{"ruleId":"138","severity":1,"message":"146","line":11,"column":8,"nodeType":"140","messageId":"141","endLine":11,"endColumn":23},{"ruleId":"138","severity":1,"message":"147","line":3,"column":10,"nodeType":"140","messageId":"141","endLine":3,"endColumn":17},{"ruleId":"138","severity":1,"message":"148","line":3,"column":51,"nodeType":"140","messageId":"141","endLine":3,"endColumn":59},{"ruleId":"138","severity":1,"message":"149","line":10,"column":10,"nodeType":"140","messageId":"141","endLine":10,"endColumn":15},{"ruleId":"138","severity":1,"message":"150","line":22,"column":9,"nodeType":"140","messageId":"141","endLine":22,"endColumn":13},{"ruleId":"138","severity":1,"message":"151","line":26,"column":9,"nodeType":"140","messageId":"141","endLine":26,"endColumn":28},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":1,"column":17,"nodeType":"140","messageId":"141","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":11,"column":40,"nodeType":"155","messageId":"156","endLine":11,"endColumn":42},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRepo'. Either include it or remove the dependency array.","ArrayExpression",["159"],"no-unused-vars","'setStartDate' is assigned a value but never used.","Identifier","unusedVar","'setEndDate' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reList' and 'setFilteredList'. Either include them or remove the dependency array. If 'setFilteredList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["160"],"'ScoreCalculator' is defined but never used.","'Popover' is defined but never used.","'Skeleton' is defined but never used.","'hover' is assigned a value but never used.","'hide' is assigned a value but never used.","'handleVisibleChange' is assigned a value but never used.","'Component' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},"Update the dependencies array to be: [setRepo]",{"range":"165","text":"166"},"Update the dependencies array to be: [reList, setFilteredList, value]",{"range":"167","text":"168"},[1366,1368],"[setRepo]",[552,559],"[reList, setFilteredList, value]"]