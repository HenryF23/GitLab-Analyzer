[{"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js":"1","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js":"2","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js":"3","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js":"4","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Batch.js":"5","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js":"6","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Table.js":"7","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js":"8","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js":"9","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js":"10","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js":"11","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js":"12","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js":"13","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js":"14","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js":"15","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitGraph.js":"16","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\commitData.js":"17","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js":"18","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js":"19","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js":"20","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js":"21","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js":"22","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SummaryPage.js":"23","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\SelectUser.js":"24","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\StackedBar.js":"25","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\BarGraph.js":"26","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\TablePage.js":"27"},{"size":328,"mtime":1613775547488,"results":"28","hashOfConfig":"29"},{"size":1401,"mtime":1615180982437,"results":"30","hashOfConfig":"29"},{"size":841,"mtime":1613946214282,"results":"31","hashOfConfig":"29"},{"size":167,"mtime":1613793025076,"results":"32","hashOfConfig":"29"},{"size":175,"mtime":1615181449624,"results":"33","hashOfConfig":"29"},{"size":1356,"mtime":1614984067266,"results":"34","hashOfConfig":"29"},{"size":183,"mtime":1613793025078,"results":"35","hashOfConfig":"29"},{"size":1274,"mtime":1615177794073,"results":"36","hashOfConfig":"29"},{"size":3433,"mtime":1614984067267,"results":"37","hashOfConfig":"29"},{"size":1513,"mtime":1613791724362,"results":"38","hashOfConfig":"29"},{"size":421,"mtime":1613793015687,"results":"39","hashOfConfig":"29"},{"size":1247,"mtime":1614984067266,"results":"40","hashOfConfig":"29"},{"size":2901,"mtime":1614984067265,"results":"41","hashOfConfig":"29"},{"size":4427,"mtime":1614984067264,"results":"42","hashOfConfig":"29"},{"size":2205,"mtime":1615177794077,"results":"43","hashOfConfig":"29"},{"size":4349,"mtime":1613946214248,"results":"44","hashOfConfig":"29"},{"size":6310,"mtime":1613963384694,"results":"45","hashOfConfig":"29"},{"size":2624,"mtime":1613963384689,"results":"46","hashOfConfig":"29"},{"size":1845,"mtime":1614832363473,"results":"47","hashOfConfig":"29"},{"size":1296,"mtime":1615177794078,"results":"48","hashOfConfig":"29"},{"size":732,"mtime":1613793025323,"results":"49","hashOfConfig":"29"},{"size":828,"mtime":1613891466354,"results":"50","hashOfConfig":"29"},{"size":4981,"mtime":1615177794080,"results":"51","hashOfConfig":"29"},{"size":890,"mtime":1615177794074,"results":"52","hashOfConfig":"29"},{"size":1993,"mtime":1615177794079,"results":"53","hashOfConfig":"29"},{"size":1631,"mtime":1615177794079,"results":"54","hashOfConfig":"29"},{"size":2511,"mtime":1615181734108,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"16t6km4",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js",[],["120","121"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js",["122"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Batch.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Table.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js",["123"],"import React from 'react';\r\nimport { Navbar, Nav, Link} from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport FloatBar from './floatbar/FloatBar';\r\nimport SelectUser from './SelectUser';\r\nimport Logo from './Logo';\r\n\r\nconst Header = () => {\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <FloatBar />\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer to=\"/summary\" test=\"hello\">\r\n              <Nav.Link>Summary</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/commits\">\r\n              <Nav.Link>Commits & MRs</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/table\">\r\n              <Nav.Link>Issues & Reviews</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/batch\">\r\n              <Nav.Link>Batch Processing</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/config\">\r\n              <Nav.Link>Config</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n      <SelectUser />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js",["124"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport '../Shared.css';\r\nimport Logo from '../components/Logo';\r\nimport SearchBar from '../components/login/SearchBar';\r\nimport { Button, Alert, Spin } from 'antd';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Repo from '../components/login/Repo';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\n\r\nfunction SearchPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const { user, setUser, setRepo } = useAuth();\r\n  const [reList, setReList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getRepos = async () => {\r\n      setLoading(true);\r\n      const repoList = await axios.get('http://localhost:5678/getProjectList');\r\n      setRepo(repoList.data.value);\r\n      setReList([\r\n        ...repoList.data.value,\r\n        'Administrator / Earth GitLab 373',\r\n        'Administrator / Mars GitLab 373',\r\n        'Administrator / Jupiter GitLab 373',\r\n      ]);\r\n      setFilteredList([\r\n        ...repoList.data.value,\r\n        'Administrator / Earth GitLab 373',\r\n        'Administrator / Mars GitLab 373',\r\n        'Administrator / Jupiter GitLab 373',\r\n      ]);\r\n      setLoading(false);\r\n    };\r\n    getRepos();\r\n  }, []);\r\n\r\n  const handleLogOut = (e) => {\r\n    e.preventDefault();\r\n    sessionStorage.removeItem('user');\r\n    setRepo(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const loadingContainer = () => {\r\n    if (loading) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Loading ...\">\r\n            <Alert\r\n              message=\"Loading repository list\"\r\n              description=\"Please wait while we retrieve your repository information.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else if (analyzing && user) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Analyzing...\">\r\n            <Alert\r\n              message=\"Analzying selected repository\"\r\n              description=\"Please wait while we analyze your selected repository.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"main_container\">\r\n        <div className=\"rightalign\">\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={handleLogOut}\r\n            icon={<LogoutOutlined />}\r\n            className=\"logout\"\r\n            size=\"large\"\r\n          >\r\n            Log Out\r\n          </Button>\r\n        </div>\r\n        <div className=\"App\">\r\n          <div className=\"center\">\r\n            <div className=\"m-bot\">\r\n              <Logo />\r\n            </div>\r\n            <SearchBar\r\n              reList={reList}\r\n              setLoading={setLoading}\r\n              setFilteredList={setFilteredList}\r\n              filteredList={filteredList}\r\n            />\r\n            {loadingContainer()}\r\n            <Repo\r\n              setAnalyzing={setAnalyzing}\r\n              filteredList={filteredList}\r\n              setFilteredList={setFilteredList}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js",["125","126"],"import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport { Input } from 'antd';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst { Search } = Input;\r\n\r\nconst SearchBarComp = ({ reList, setFilteredList }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (value === '') {\r\n      setFilteredList(reList);\r\n    } else {\r\n      setFilteredList(\r\n        reList.filter((repo) =>\r\n          repo.toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }, [value]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleOnChange = async (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"bar_container\">\r\n        <form className=\"flex\" onSubmit={handleSubmit}>\r\n          <Search\r\n            value={value}\r\n            style={{ width: '650px' }}\r\n            placeholder=\"Search a repository\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onChange={handleOnChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarComp;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js",["127"],"import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Select, Button, DatePicker } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport EveryoneScore from './EveryoneScore.js';\r\nimport moment from 'moment';\r\nimport \"./FloatBar.css\";\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\nconst iter1 = [\"2021-01-18\", \"2021-02-22\"];\r\nconst iter2 = [\"2021-02-23\", \"2021-03-29\"];\r\nconst iter3 = [\"2021-03-30\", \"2021-04-26\"];\r\nfunction FloatBar() {\r\n  const [sortType, setSortType] = React.useState('');\r\n  \r\n  return (\r\n    <div className=\"floatbar-container\">\r\n      <div className=\"floatbaralign\">\r\n        <EveryoneScore />\r\n      </div>\r\n      <div className=\"floatbar-functions\">\r\n        <Grid\r\n          container\r\n          className=\"sth\"\r\n          spacing={2}\r\n          direction=\"column\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <div className=\"daterange\">\r\n              <RangePicker \r\n                defaultValue={[null, moment()]}\r\n                ranges={{\r\n                  Today: [moment(), moment()],\r\n                  'Iteration 1': [moment(iter1[0]), moment(iter1[1])],\r\n                  'Iteration 2': [moment(iter2[0]), moment(iter2[1])],\r\n                  'Iteration 3': [moment(iter3[0]), moment(iter3[1])],\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div className=\"selectSort\">\r\n              <Select \r\n                placeholder = \"Sort\" \r\n                style={{ width: 150 }} \r\n                onChange={value => setSortType(value)}\r\n              >\r\n                <Option value=\"Alphabetical\">Alphabetical</Option>\r\n                <Option value=\"Low to High\">Low to High</Option>\r\n                <Option value=\"High to Low\">High to Low</Option>\r\n              </Select>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Button style={{ width: 150 }}>\r\n              Copy\r\n              <CopyOutlined className=\"copyicon\" />\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FloatBar;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitGraph.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\commitData.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js",["128","129","130","131","132"],"import React, { useEffect, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Popover, Checkbox, List, Avatar, Button, Skeleton } from 'antd';\r\nimport { fetchData } from './commitData';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\n// Used boilerplate from https://ant.design/components/list/\r\nconst CommitBar = ({ username }) => {\r\n  const [commits, setCommits] = useState([]);\r\n  const [hover, setHover] = useState({ visible: false });\r\n  const { selectUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    getFakeData();\r\n  }, []);\r\n\r\n  const getFakeData = async () => {\r\n    const data = await fetchData();\r\n    setCommits(data);\r\n  };\r\n\r\n  const hide = () => {\r\n    setHover({ visible: false });\r\n  };\r\n\r\n  const handleVisibleChange = (visible) => {\r\n    setHover({ visible });\r\n  };\r\n\r\n  const filterCommits = (username, commits) => {\r\n    const filteredCommits = commits.filter((commit) => {\r\n      return commit.username === username;\r\n    });\r\n    return filteredCommits;\r\n  };\r\n\r\n  const getDataSource = () => {\r\n    if (selectUser === '@everyone') {\r\n      return commits;\r\n    } else {\r\n      return filterCommits(selectUser, commits);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <List\r\n      className=\"demo-loadmore-list\"\r\n      // loading={initLoading}\r\n      itemLayout=\"horizontal\"\r\n      // loadMore={loadMore}\r\n      pagination={{\r\n        onChange: (page) => {\r\n          console.log(page);\r\n        },\r\n        pageSize: 8,\r\n      }}\r\n      dataSource={getDataSource()}\r\n      renderItem={(commits) => (\r\n        <List.Item\r\n          actions={[\r\n            <Button size=\"small\" type=\"primary\">\r\n              commits\r\n            </Button>,\r\n            // <Popover\r\n            //   content={<a onClick={hide}>Close</a>}\r\n            //   title=\"Title\"\r\n            //   trigger=\"click\"\r\n            //   visible={hover.visible}\r\n            //   onVisibleChange={handleVisibleChange}\r\n            // >\r\n            <Button ghost size=\"small\" type=\"primary\">\r\n              details\r\n            </Button>,\r\n            // </Popover>,\r\n            <Checkbox>ignore</Checkbox>,\r\n          ]}\r\n        >\r\n          {/* <Skeleton avatar title={false} loading={item.loading} active> */}\r\n          <List.Item.Meta\r\n            avatar={<Avatar shape=\"square\" size=\"large\" src={commits.avatar} />}\r\n            title={<a href=\"/commits\">{commits.title}</a>}\r\n            description={`${commits.username} Updated: ${commits.date}`}\r\n          />\r\n          <div>{commits.weighting}%</div>\r\n          {/* </Skeleton> */}\r\n        </List.Item>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default CommitBar;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js",["133"],"import React from \"react\";\r\nimport Data from './FloatBarData.json';\r\nimport './IndividualScore.css';\r\nimport { Card } from 'antd';\r\n\r\nvar FloatBarData = Data.users;\r\n\r\nfunction IndividualScore(props) {\r\n    return (\r\n       <div>\r\n            {FloatBarData.map((Detail) => {\r\n                if (Detail.username === props.children){\r\n                    <div>{Detail.username}</div>\r\n                    return (\r\n                        <div className = \"cardContainer\">\r\n                            <Card title = {Detail.score}>                \r\n                                Weighted Score\r\n                            </Card>\r\n                            <Card title = {Detail.number_commits}>                \r\n                                Number of Commits\r\n                            </Card>\r\n                            <Card title = {Detail.lines_of_code}>                \r\n                                Lines of Code\r\n                            </Card>\r\n                            <Card title = {Detail.number_issues}>                \r\n                                Issues & Reviews\r\n                            </Card>\r\n                        </div>\r\n                    );\r\n                }\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IndividualScore;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SummaryPage.js",["134","135","136"],"import React, {useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport BarGraph from '../components/summary/BarGraph'\r\nimport { Menu, Dropdown, Button } from 'antd';\r\nimport {DownOutlined} from '@ant-design/icons'\r\nimport 'antd/dist/antd.css';\r\nimport StackedBarGraph from '../components/summary/StackedBar'\r\n\r\n/* could probably move some of this stuff into other components */\r\n\r\nconst useStyles = makeStyles((theme) =>({\r\n    root: {\r\n        fontFamily: 'Comfortaa'\r\n    },\r\n    grid: {\r\n      width: '100%',\r\n      margin:'0px',\r\n      padding: 25,\r\n      paddingBottom: 25,\r\n      textAlign: 'left',\r\n    }\r\n  }));\r\n\r\nconst Summary = () => {\r\n    const [startDate, setStartDate] = useState('Jan 2021')\r\n    const [endDate, setEndDate] = useState('Mar 2021')\r\n\r\n    const [combinedDropdown, setCombinedDropdown] = useState('Number')\r\n    const [crDropdown, setCrDropdown] = useState('All')\r\n    const [textRender, setTextRender] = useState('Number')\r\n    const classes = useStyles();\r\n\r\n    // will be replaced once we find out how to get data from backend\r\n    const data = [44, 55, 41, 67, 22, 43, 0, 30, 10, 10, 44, 55, 41, 43, 0, 30, 10, 10, 43, 0, 30, 10, 10]\r\n\r\n    const data2 = [55, 41, 43, 0, 30, 10, 10, 43, 0, 30, 10, 10, 44, 44, 55, 41, 67, 22, 43, 0, 30, 10, 10]\r\n\r\n    const data3 = [10, 44, 55, 41, 43, 0, 30, 10, 10, 10, 44, 44, 55, 41, 67, 22, 10, 44, 44, 55, 41, 55, 41]\r\n\r\n    const [combinedSeries, setCombinedSeries] = useState([{\r\n      name: \"Merge Requests\",\r\n      data: data\r\n    }, {\r\n      name: \"Commits\",\r\n      data: data2\r\n    }\r\n])\r\n\r\n    const [crSeries, setCrSeries] = useState([{\r\n      name: \"Code Review Words\",\r\n      data: data\r\n    }\r\n    ])\r\n\r\n    const [issueSeries, setIssueSeries] = useState([{\r\n      name: \"Issue Words\",\r\n      data: data\r\n    }\r\n    ])\r\n\r\n    const handleMenuClick = (e) => {\r\n      console.log('Key test:', e);\r\n\r\n      if(e.key === \"Num\") {\r\n        setCombinedDropdown(\"Number\")\r\n        setCombinedSeries([{\r\n          data: data\r\n        },{\r\n          data: data2\r\n        }\r\n        ])\r\n        setTextRender('Number')\r\n      } else if(e.key === \"Score\") {\r\n        setCombinedDropdown(\"Score\")\r\n        setCombinedSeries([{\r\n          data: data2\r\n        }, {\r\n          data: data\r\n        }\r\n        ])\r\n        setTextRender('Score')\r\n      } else if (e.key ===\"crAll\") {\r\n        setCrDropdown(\"All\")\r\n        setCrSeries([{\r\n          data: data\r\n        }\r\n        ])\r\n      } else if (e.key === \"crOwn\") {\r\n        setCrDropdown(\"Own\")\r\n        setCrSeries([{\r\n          data: data2\r\n        }\r\n        ])\r\n      } else if (e.key === \"crOthers\") {\r\n        setCrDropdown(\"Others\")\r\n        setCrSeries([{\r\n          data: data3\r\n        }\r\n        ])\r\n      }\r\n \r\n    };\r\n\r\n    const combinedMenu = (\r\n      <Menu onClick={handleMenuClick} >\r\n        <Menu.Item key=\"Num\">Number</Menu.Item>\r\n        <Menu.Item key=\"Score\">Score</Menu.Item>\r\n      </Menu>\r\n    )\r\n\r\n    const crMenu = (\r\n      <Menu onClick={handleMenuClick} >\r\n        <Menu.Item key=\"crAll\">All</Menu.Item>\r\n        <Menu.Item key=\"crOwn\">Own</Menu.Item>\r\n        <Menu.Item key=\"crOthers\">Others</Menu.Item>\r\n      </Menu>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.grid}>\r\n              <Grid item xs={12}>                    \r\n                          <b>Merge Request & Commit {textRender} from {startDate} to {endDate}</b>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                          <StackedBarGraph series={combinedSeries} />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Dropdown overlay={combinedMenu}>\r\n                  <Button>\r\n                    {combinedDropdown} <DownOutlined />\r\n                  </Button>\r\n                </Dropdown>\r\n              </Grid>\r\n              <Grid item xs={12}>                    \r\n                <b>Code Review Word Count from {startDate} to {endDate}</b>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <BarGraph series={crSeries} colors={'#f8f0d4'} stroke={'#CBB97B'}/>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                <Dropdown overlay={crMenu}>\r\n                  <Button>\r\n                    {crDropdown} <DownOutlined />\r\n                  </Button>\r\n                </Dropdown>\r\n              </Grid>\r\n              <Grid item xs={12}>                    \r\n                <b>Issue Word Count from {startDate} to {endDate}</b>\r\n              </Grid>\r\n              <Grid item xs={10}>\r\n                <BarGraph series={issueSeries} colors={'#d4d8f8'} stroke={'#7F87CF'}/>\r\n              </Grid>\r\n              <Grid item xs={2}>\r\n              </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Summary\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\SelectUser.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\StackedBar.js",["137"],"import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\r\n\r\nclass StackedBarGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        options: {\r\n          colors: [ '#E2F0CB', '#C7EBFF'],\r\n          stroke: {\r\n            show: true,\r\n            curve: 'smooth',\r\n            lineCap: 'butt',\r\n            colors: [ '#7dab31', '#6AB1D9'],\r\n            width: 1,\r\n            dashArray: 0,      \r\n        },\r\n          chart: {\r\n            toolbar: {\r\n              show: false\r\n            },\r\n            stacked: true,\r\n            type: 'bar',\r\n            height: 350,\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              legend: {\r\n                position: 'bottom',\r\n                offsetX: -10,\r\n                offsetY: 0\r\n              }\r\n            }\r\n          }],\r\n          plotOptions: {\r\n            bar: {\r\n              borderRadius: 8,\r\n              horizontal: false,\r\n              endingShape: 'flat'\r\n            }\r\n          },\r\n          xaxis: {\r\n            categories: ['Jan', 'Feb'],\r\n          },\r\n          yaxis: {\r\n            title: {\r\n              text: this.props.ylabel\r\n            }\r\n          },\r\n          legend: {\r\n            position: 'top',\r\n            horizontalAlign: 'right',\r\n            onItemClick: {\r\n              toggleDataSeries: false\r\n            }\r\n          },\r\n          fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n          }\r\n        },\r\n      \r\n      \r\n      };\r\n    }\r\n\r\n    render() {\r\n      console.log(this.props)\r\n      return (\r\n  <div id=\"chart\">\r\n<Chart options={this.state.options} series={this.props.series} type=\"bar\" height={350} />\r\n</div>\r\n\r\n      );\r\n    }\r\n  }\r\n\r\nexport default StackedBarGraph","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\BarGraph.js",["138"],"import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\r\n\r\nclass BarGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        options: {\r\n          colors: [this.props.colors],\r\n          stroke: {\r\n            show: true,\r\n            curve: 'smooth',\r\n            lineCap: 'butt',\r\n            colors: [this.props.stroke],\r\n            width: 1,\r\n            dashArray: 0,      \r\n        },\r\n          chart: {\r\n            toolbar: {\r\n              show: false\r\n            },\r\n            type: 'bar',\r\n            height: 350,\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              legend: {\r\n                position: 'bottom',\r\n                offsetX: -10,\r\n                offsetY: 0\r\n              }\r\n            }\r\n          }],\r\n          plotOptions: {\r\n            bar: {\r\n              borderRadius: 8,\r\n              horizontal: false,\r\n              endingShape: 'flat'\r\n            }\r\n          },\r\n          xaxis: {\r\n            categories: ['Jan', 'Feb'],\r\n          },\r\n          fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n          }\r\n        },\r\n      };\r\n    }\r\n\r\n    render() {\r\n      console.log(this.props)\r\n\r\n      return (\r\n  <div id=\"chart\">\r\n<Chart options={this.state.options} series={this.props.series} type=\"bar\" height={200} />\r\n</div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default BarGraph","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\TablePage.js",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":13},{"ruleId":"143","severity":1,"message":"147","line":2,"column":23,"nodeType":"145","messageId":"146","endLine":2,"endColumn":27},{"ruleId":"148","severity":1,"message":"149","line":40,"column":6,"nodeType":"150","endLine":40,"endColumn":8,"suggestions":"151"},{"ruleId":"143","severity":1,"message":"152","line":11,"column":11,"nodeType":"145","messageId":"146","endLine":11,"endColumn":15},{"ruleId":"148","severity":1,"message":"153","line":23,"column":6,"nodeType":"150","endLine":23,"endColumn":13,"suggestions":"154"},{"ruleId":"143","severity":1,"message":"155","line":15,"column":10,"nodeType":"145","messageId":"146","endLine":15,"endColumn":18},{"ruleId":"143","severity":1,"message":"156","line":3,"column":10,"nodeType":"145","messageId":"146","endLine":3,"endColumn":17},{"ruleId":"143","severity":1,"message":"157","line":3,"column":51,"nodeType":"145","messageId":"146","endLine":3,"endColumn":59},{"ruleId":"143","severity":1,"message":"158","line":10,"column":10,"nodeType":"145","messageId":"146","endLine":10,"endColumn":15},{"ruleId":"143","severity":1,"message":"159","line":22,"column":9,"nodeType":"145","messageId":"146","endLine":22,"endColumn":13},{"ruleId":"143","severity":1,"message":"160","line":26,"column":9,"nodeType":"145","messageId":"146","endLine":26,"endColumn":28},{"ruleId":"161","severity":1,"message":"162","line":11,"column":40,"nodeType":"163","messageId":"164","endLine":11,"endColumn":42},{"ruleId":"143","severity":1,"message":"165","line":26,"column":23,"nodeType":"145","messageId":"146","endLine":26,"endColumn":35},{"ruleId":"143","severity":1,"message":"166","line":27,"column":21,"nodeType":"145","messageId":"146","endLine":27,"endColumn":31},{"ruleId":"143","severity":1,"message":"167","line":56,"column":25,"nodeType":"145","messageId":"146","endLine":56,"endColumn":39},{"ruleId":"143","severity":1,"message":"168","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"168","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRepo'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reList' and 'setFilteredList'. Either include them or remove the dependency array. If 'setFilteredList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["172"],"'sortType' is assigned a value but never used.","'Popover' is defined but never used.","'Skeleton' is defined but never used.","'hover' is assigned a value but never used.","'hide' is assigned a value but never used.","'handleVisibleChange' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'setIssueSeries' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [setRepo]",{"range":"177","text":"178"},"Update the dependencies array to be: [reList, setFilteredList, value]",{"range":"179","text":"180"},[1405,1407],"[setRepo]",[574,581],"[reList, setFilteredList, value]"]