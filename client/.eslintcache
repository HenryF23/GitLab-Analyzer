[{"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/index.js":"1","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/App.js":"2","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/context/AuthContext.js":"3","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Config.js":"4","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Header.js":"5","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/FooterBar.js":"6","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/BatchPage.js":"7","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/LoginPage.js":"8","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/SearchPage.js":"9","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/SummaryPage.js":"10","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/CommitPage.js":"11","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/TablePage.js":"12","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/ConfigPage.js":"13","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Logo.js":"14","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/LogOut.js":"15","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/SelectUser.js":"16","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/FloatBar.js":"17","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/batch/BatchTable.js":"18","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/LoginBar.js":"19","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/SearchBar.js":"20","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/summary/BarGraph.js":"21","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/summary/StackedBar.js":"22","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/commits/CommitBar.js":"23","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/table/FilterMenu.js":"24","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/Repo.js":"25","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/EveryoneScore.js":"26","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/BarStyles.js":"27","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/ScoreCalculator.js":"28","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/IndividualScore.js":"29","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/Scroll.js":"30"},{"size":314,"mtime":1613690875126,"results":"31","hashOfConfig":"32"},{"size":1313,"mtime":1615676099050,"results":"33","hashOfConfig":"32"},{"size":1193,"mtime":1615655846970,"results":"34","hashOfConfig":"32"},{"size":156,"mtime":1613793335854,"results":"35","hashOfConfig":"32"},{"size":1301,"mtime":1615662214990,"results":"36","hashOfConfig":"32"},{"size":336,"mtime":1615260256000,"results":"37","hashOfConfig":"32"},{"size":392,"mtime":1615663104750,"results":"38","hashOfConfig":"32"},{"size":1308,"mtime":1615260243180,"results":"39","hashOfConfig":"32"},{"size":3015,"mtime":1615662853380,"results":"40","hashOfConfig":"32"},{"size":5190,"mtime":1615662940450,"results":"41","hashOfConfig":"32"},{"size":498,"mtime":1615663009840,"results":"42","hashOfConfig":"32"},{"size":4159,"mtime":1615663044020,"results":"43","hashOfConfig":"32"},{"size":273,"mtime":1615663173030,"results":"44","hashOfConfig":"32"},{"size":404,"mtime":1614477821502,"results":"45","hashOfConfig":"32"},{"size":620,"mtime":1615662848400,"results":"46","hashOfConfig":"32"},{"size":861,"mtime":1615260243180,"results":"47","hashOfConfig":"32"},{"size":3525,"mtime":1615676038350,"results":"48","hashOfConfig":"32"},{"size":2401,"mtime":1615616682387,"results":"49","hashOfConfig":"32"},{"size":4270,"mtime":1615260243180,"results":"50","hashOfConfig":"32"},{"size":1195,"mtime":1615260243180,"results":"51","hashOfConfig":"32"},{"size":1560,"mtime":1615260243180,"results":"52","hashOfConfig":"32"},{"size":1907,"mtime":1615260243180,"results":"53","hashOfConfig":"32"},{"size":5227,"mtime":1615260256000,"results":"54","hashOfConfig":"32"},{"size":2357,"mtime":1615616682387,"results":"55","hashOfConfig":"32"},{"size":11565,"mtime":1615673974270,"results":"56","hashOfConfig":"32"},{"size":1966,"mtime":1615616682387,"results":"57","hashOfConfig":"32"},{"size":695,"mtime":1613793335854,"results":"58","hashOfConfig":"32"},{"size":146,"mtime":1615616682387,"results":"59","hashOfConfig":"32"},{"size":1260,"mtime":1615260243180,"results":"60","hashOfConfig":"32"},{"size":803,"mtime":1613891300313,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1ygpcoy",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/index.js",[],["132","133"],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/App.js",["134"],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/context/AuthContext.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Config.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Header.js",["135"],"import React from 'react';\nimport { Navbar, Nav, Link } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport FloatBar from './floatbar/FloatBar';\nimport Logo from './Logo';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <div>\n      <Logo />\n      <FloatBar />\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <LinkContainer className=\"marginRight\" to=\"/summary\">\n              <Nav.Link>Summary</Nav.Link>\n            </LinkContainer>\n            <LinkContainer className=\"marginRight\" to=\"/commits\">\n              <Nav.Link>Commits & MRs</Nav.Link>\n            </LinkContainer>\n            <LinkContainer className=\"marginRight\" to=\"/table\">\n              <Nav.Link>Issues & Reviews</Nav.Link>\n            </LinkContainer>\n            <LinkContainer className=\"marginRight\" to=\"/batch\">\n              <Nav.Link>Batch Processing</Nav.Link>\n            </LinkContainer>\n            <LinkContainer className=\"marginRight\" to=\"/config\">\n              <Nav.Link>Config</Nav.Link>\n            </LinkContainer>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/FooterBar.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/BatchPage.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/LoginPage.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/SearchPage.js",["136"],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport '../Shared.css';\nimport Logo from '../components/Logo';\nimport SearchBar from '../components/login/SearchBar';\nimport { Alert, Spin } from 'antd';\nimport { useAuth } from '../context/AuthContext';\nimport Repo from '../components/login/Repo';\nimport axios from 'axios';\nimport { Redirect } from 'react-router';\nimport LogOut from '../components/LogOut';\n\nfunction SearchPage() {\n  const [loading, setLoading] = useState(false);\n  const [analyzing, setAnalyzing] = useState(false);\n  const { user, setRepo } = useAuth();\n  const [reList, setReList] = useState([]);\n  const [filteredList, setFilteredList] = useState([]);\n\n  useEffect(() => {\n    const getRepos = async () => {\n      setLoading(true);\n      const repoList = await axios.get('http://localhost:5678/projects');\n      setRepo(repoList.data.projects);\n      setReList([\n        ...repoList.data.projects,\n        'Administrator / Earth GitLab 373',\n        'Administrator / Mars GitLab 373',\n        'Administrator / Jupiter GitLab 373',\n      ]);\n      setFilteredList([\n        ...repoList.data.projects,\n        'Administrator / Earth GitLab 373',\n        'Administrator / Mars GitLab 373',\n        'Administrator / Jupiter GitLab 373',\n      ]);\n      setLoading(false);\n    };\n    getRepos();\n  }, []);\n\n  const loadingContainer = () => {\n    if (loading) {\n      return (\n        <div style={{ margin: '50px' }}>\n          <Spin tip=\"Loading ...\">\n            <Alert\n              message=\"Loading repository list\"\n              description=\"Please wait while we retrieve your repository information.\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      );\n    } else if (analyzing && user) {\n      return (\n        <div style={{ margin: '50px' }}>\n          <Spin tip=\"Analyzing...\">\n            <Alert\n              message=\"Analyzing selected repository\"\n              description=\"Please wait while we analyze your selected repository.\"\n              type=\"info\"\n            />\n          </Spin>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  };\n\n  if (user) {\n    return (\n      <div className=\"main_container\">\n        <div className=\"rightalign\">\n          <LogOut />\n        </div>\n        <div className=\"App\">\n          <div className=\"center\">\n            <div className=\"m-bot\">\n              <Logo />\n            </div>\n            <SearchBar\n              reList={reList}\n              setLoading={setLoading}\n              setFilteredList={setFilteredList}\n              filteredList={filteredList}\n            />\n            {loadingContainer()}\n            <Repo\n              setAnalyzing={setAnalyzing}\n              loading={loading}\n              analyzing={analyzing}\n              filteredList={filteredList}\n              setFilteredList={setFilteredList}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/\" />;\n  }\n}\n\nexport default SearchPage;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/SummaryPage.js",["137","138","139"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport BarGraph from '../components/summary/BarGraph';\nimport { Menu, Dropdown, Button } from 'antd';\nimport { DownOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport StackedBarGraph from '../components/summary/StackedBar';\nimport SelectUser from '../components/SelectUser';\nimport Header from '../components/Header';\nimport FooterBar from '../components/FooterBar';\n\n/* could probably move some of this stuff into other components */\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: 'Comfortaa',\n  },\n  grid: {\n    width: '100%',\n    margin: '0px',\n    padding: 25,\n    paddingBottom: 25,\n    textAlign: 'left',\n  },\n}));\n\nconst Summary = () => {\n  const [startDate, setStartDate] = useState('Jan 2021');\n  const [endDate, setEndDate] = useState('Mar 2021');\n\n  const [combinedDropdown, setCombinedDropdown] = useState('Number');\n  const [crDropdown, setCrDropdown] = useState('All');\n  const [textRender, setTextRender] = useState('Number');\n  const classes = useStyles();\n\n  // will be replaced once we find out how to get data from backend\n  const data = [\n    44,\n    55,\n    41,\n    67,\n    22,\n    43,\n    0,\n    30,\n    10,\n    10,\n    44,\n    55,\n    41,\n    43,\n    0,\n    30,\n    10,\n    10,\n    43,\n    0,\n    30,\n    10,\n    10,\n  ];\n\n  const data2 = [\n    55,\n    41,\n    43,\n    0,\n    30,\n    10,\n    10,\n    43,\n    0,\n    30,\n    10,\n    10,\n    44,\n    44,\n    55,\n    41,\n    67,\n    22,\n    43,\n    0,\n    30,\n    10,\n    10,\n  ];\n\n  const data3 = [\n    10,\n    44,\n    55,\n    41,\n    43,\n    0,\n    30,\n    10,\n    10,\n    10,\n    44,\n    44,\n    55,\n    41,\n    67,\n    22,\n    10,\n    44,\n    44,\n    55,\n    41,\n    55,\n    41,\n  ];\n\n  const [combinedSeries, setCombinedSeries] = useState([\n    {\n      name: 'Merge Requests',\n      data: data,\n    },\n    {\n      name: 'Commits',\n      data: data2,\n    },\n  ]);\n\n  const [crSeries, setCrSeries] = useState([\n    {\n      name: 'Code Review Words',\n      data: data,\n    },\n  ]);\n\n  const [issueSeries, setIssueSeries] = useState([\n    {\n      name: 'Issue Words',\n      data: data,\n    },\n  ]);\n\n  const handleMenuClick = (e) => {\n    console.log('Key test:', e);\n\n    if (e.key === 'Num') {\n      setCombinedDropdown('Number');\n      setCombinedSeries([\n        {\n          data: data,\n        },\n        {\n          data: data2,\n        },\n      ]);\n      setTextRender('Number');\n    } else if (e.key === 'Score') {\n      setCombinedDropdown('Score');\n      setCombinedSeries([\n        {\n          data: data2,\n        },\n        {\n          data: data,\n        },\n      ]);\n      setTextRender('Score');\n    } else if (e.key === 'crAll') {\n      setCrDropdown('All');\n      setCrSeries([\n        {\n          data: data,\n        },\n      ]);\n    } else if (e.key === 'crOwn') {\n      setCrDropdown('Own');\n      setCrSeries([\n        {\n          data: data2,\n        },\n      ]);\n    } else if (e.key === 'crOthers') {\n      setCrDropdown('Others');\n      setCrSeries([\n        {\n          data: data3,\n        },\n      ]);\n    }\n  };\n\n  const combinedMenu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"Num\">Number</Menu.Item>\n      <Menu.Item key=\"Score\">Score</Menu.Item>\n    </Menu>\n  );\n\n  const crMenu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key=\"crAll\">All</Menu.Item>\n      <Menu.Item key=\"crOwn\">Own</Menu.Item>\n      <Menu.Item key=\"crOthers\">Others</Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <>\n      <Header />\n      <SelectUser />\n      <div>\n        <Grid container className={classes.grid}>\n          <Grid item xs={12}>\n            <b>\n              Merge Request & Commit {textRender} from {startDate} to {endDate}\n            </b>\n          </Grid>\n          <Grid item xs={10}>\n            <StackedBarGraph series={combinedSeries} />\n          </Grid>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={1}>\n            <Dropdown overlay={combinedMenu}>\n              <Button>\n                {combinedDropdown} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Grid>\n          <Grid item xs={12}>\n            <b>\n              Code Review Word Count from {startDate} to {endDate}\n            </b>\n          </Grid>\n          <Grid item xs={10}>\n            <BarGraph series={crSeries} colors={'#f8f0d4'} stroke={'#CBB97B'} />\n          </Grid>\n          <Grid item xs={1}></Grid>\n          <Grid item xs={1}>\n            <Dropdown overlay={crMenu}>\n              <Button>\n                {crDropdown} <DownOutlined />\n              </Button>\n            </Dropdown>\n          </Grid>\n          <Grid item xs={12}>\n            <b>\n              Issue Word Count from {startDate} to {endDate}\n            </b>\n          </Grid>\n          <Grid item xs={10}>\n            <BarGraph\n              series={issueSeries}\n              colors={'#d4d8f8'}\n              stroke={'#7F87CF'}\n            />\n          </Grid>\n          <Grid item xs={2}></Grid>\n        </Grid>\n      </div>\n      <FooterBar />\n    </>\n  );\n};\n\nexport default Summary;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/CommitPage.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/TablePage.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/pages/ConfigPage.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/Logo.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/LogOut.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/SelectUser.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/FloatBar.js",["140","141","142","143","144","145","146","147"],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/batch/BatchTable.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/LoginBar.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/SearchBar.js",["148","149"],"import React, { useState, useEffect } from 'react';\nimport './SearchBar.css';\nimport { Input } from 'antd';\nimport { useAuth } from '../../context/AuthContext';\n\nconst { Search } = Input;\n\nconst SearchBarComp = ({ reList, setFilteredList }) => {\n  const [value, setValue] = useState('');\n\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (value === '') {\n      setFilteredList(reList);\n    } else {\n      setFilteredList(\n        reList.filter((repo) =>\n          repo.toLowerCase().includes(value.toLowerCase())\n        )\n      );\n    }\n  }, [value]);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  };\n\n  const handleOnChange = async (event) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"main\">\n      <div className=\"bar_container\">\n        <form className=\"flex\" onSubmit={handleSubmit}>\n          <Search\n            value={value}\n            style={{ width: '650px' }}\n            placeholder=\"Search a repository\"\n            allowClear\n            enterButton=\"Search\"\n            size=\"large\"\n            onChange={handleOnChange}\n          />\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBarComp;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/summary/BarGraph.js",["150"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\n\nclass BarGraph extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        options: {\n          colors: [this.props.colors],\n          stroke: {\n            show: true,\n            curve: 'smooth',\n            lineCap: 'butt',\n            colors: [this.props.stroke],\n            width: 1,\n            dashArray: 0,      \n        },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            type: 'bar',\n            height: 350,\n          },\n          dataLabels: {\n            enabled: false\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: 'bottom',\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }],\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              horizontal: false,\n              endingShape: 'flat'\n            }\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb'],\n          },\n          fill: {\n            type: 'solid',\n            opacity: 1\n          }\n        },\n      };\n    }\n\n    render() {\n      console.log(this.props)\n\n      return (\n  <div id=\"chart\">\n<Chart options={this.state.options} series={this.props.series} type=\"bar\" height={200} />\n</div>\n      );\n    }\n  }\n\nexport default BarGraph","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/summary/StackedBar.js",["151"],"import React, { Component } from 'react';\nimport Chart from 'react-apexcharts'\n\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\n\nclass StackedBarGraph extends React.Component {\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n      \n        options: {\n          colors: [ '#E2F0CB', '#C7EBFF'],\n          stroke: {\n            show: true,\n            curve: 'smooth',\n            lineCap: 'butt',\n            colors: [ '#7dab31', '#6AB1D9'],\n            width: 1,\n            dashArray: 0,      \n        },\n          chart: {\n            toolbar: {\n              show: false\n            },\n            stacked: true,\n            type: 'bar',\n            height: 350,\n          },\n          dataLabels: {\n            enabled: false\n          },\n          responsive: [{\n            breakpoint: 480,\n            options: {\n              legend: {\n                position: 'bottom',\n                offsetX: -10,\n                offsetY: 0\n              }\n            }\n          }],\n          plotOptions: {\n            bar: {\n              borderRadius: 8,\n              horizontal: false,\n              endingShape: 'flat'\n            }\n          },\n          xaxis: {\n            categories: ['Jan', 'Feb'],\n          },\n          yaxis: {\n            title: {\n              text: this.props.ylabel\n            }\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            onItemClick: {\n              toggleDataSeries: false\n            }\n          },\n          fill: {\n            type: 'solid',\n            opacity: 1\n          }\n        },\n      \n      \n      };\n    }\n\n    render() {\n      console.log(this.props)\n      return (\n  <div id=\"chart\">\n<Chart options={this.state.options} series={this.props.series} type=\"bar\" height={350} />\n</div>\n\n      );\n    }\n  }\n\nexport default StackedBarGraph","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/commits/CommitBar.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/table/FilterMenu.js",["152"],"import React from 'react'\n\nimport { Checkbox } from 'antd';\nimport { InputNumber } from 'antd';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n    button: {\n      paddingTop: '5px',\n      paddingBottom: '20px',\n      textAlign: 'left'\n    },\n    grid: {\n        width: '100%',\n    },\n    filterText: {\n      paddingTop: '15px'\n    },\n  });\n\nfunction onChange(e) {\n    console.log(`checked = ${e.target.checked}`);\n}\n\nconst FilterMenu = () => {\n    const classes = useStyles();\n    return (\n        <div>\n            <Grid container className={classes.grid} direction=\"column\"\n          alignItems=\"center\">\n                <Grid item xs={12}>\n                    <h4 className={classes.filterText}><b>Filter</b></h4>\n                    <h6 className={classes.filterText}>Word Count</h6>\n                </Grid>\n                <Grid item xs={12}>\n                    <p className={classes.filterText}>Min&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Max</p>\n                </Grid>\n                <Grid item xs={12}>\n                    <InputNumber className={classes.input} min={0} max={100} defaultValue={0} onChange={onChange} />\n                    <InputNumber className={classes.input}min={0} max={100} defaultValue={100} onChange={onChange} />\n                </Grid>\n                <Grid item xs={12}>\n                    <h6 className={classes.filterText}>Ownership</h6>\n                </Grid>\n                <Grid item xs={12}>\n                    <Checkbox className={classes.button} onChange={onChange} >Own</Checkbox>\n                </Grid>\n                <Grid item xs={12}>\n                    <Checkbox className={classes.button} onChange={onChange} >Other</Checkbox>\n                </Grid>\n                <Grid item xs={12}>\n                    <h6>Type</h6>\n                </Grid>\n                <Grid item xs={12}>\n                    <Checkbox className={classes.button} onChange={onChange} >Code<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Review</Checkbox>\n                </Grid>\n                <Grid item xs={12}>\n                    <Checkbox className={classes.button} onChange={onChange} >Issue</Checkbox>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default FilterMenu\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/Repo.js",["153","154","155"],"import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router';\nimport { Button, Checkbox, List, Avatar, Progress } from 'antd';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\nconst Repo = ({\n  analyzing,\n  setAnalyzing,\n  filteredList,\n  setFilteredList,\n  loading,\n}) => {\n  const {\n    setMembersList,\n    setUsersList,\n    setCommitsList,\n    setNotesList,\n    setMergeRequestList,\n    setCommentsList,\n  } = useAuth();\n  const [redirect, setRedirect] = useState(false);\n  const [checkAll, setCheckAll] = useState(false);\n  const [indeterminate, setIndeterminate] = useState(true);\n  const [checkedList, setCheckedList] = useState([]);\n  const [fetchStatus, setFetchStatus] = useState(['members', 'users']);\n\n  const plainOptions = ['Apple', 'Pear', 'Orange'];\n\n  useEffect(() => {}, [filteredList]);\n\n  // General error handling function for fetch requests\n  const fetchErrorChecker = (res, dataType) => {\n    if (!res) {\n      console.log(`Failed to retrieve ${dataType} list!`);\n      throw new Error('Fetch request failed.');\n    }\n  };\n\n  // Set project ID to the users chosen ID\n  // Currently it is hard coded to 2 since no other projects exist\n  const setProjectId = async () => {\n    const projectRes = await axios.post(\n      'http://localhost:5678/projects/set',\n      {},\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n        params: {\n          projectID: 2,\n        },\n      }\n    );\n    if (!projectRes.data['response']) {\n      console.log('Failed to set project ID!');\n      throw new Error('Fetch request failed.');\n    }\n  };\n\n  // Function for fetching members list data\n  const fetchMembers = async () => {\n    const membersRes = await axios.get(\n      'http://localhost:5678/projects/2/members'\n    );\n\n    fetchErrorChecker(membersRes.data['response'], 'members');\n    setMembersList([...membersRes.data['members']]);\n  };\n\n  // Function for fetching users list data\n  const fetchUsers = async () => {\n    const usersRes = await axios.get('http://localhost:5678/projects/2/users');\n\n    fetchErrorChecker(usersRes.data['response'], 'users');\n    setUsersList([...usersRes.data['users']]);\n  };\n\n  // Function for fetching commits list data\n  const fetchCommits = async () => {\n    const commitsRes = await axios.get(\n      'http://localhost:5678/projects/2/commit/user/all'\n    );\n    fetchErrorChecker(commitsRes.data['response'], 'commits');\n\n    const tempCommits = commitsRes.data['commit_list'].map((commit) => ({\n      userName: commit.user_name,\n      commits: [\n        commit.commits.map((innerCommit) => ({\n          authorName: innerCommit.author_name,\n          codeDiffId: innerCommit.code_diff_id,\n          commitedDate: Date.parse(innerCommit.committed_date),\n          commiterName: innerCommit.committer_name,\n          id: innerCommit.id,\n          lineCounts: {\n            ...innerCommit.line_counts,\n          },\n          shortId: innerCommit.short_id,\n          title: innerCommit.title,\n          webUrl: innerCommit.web_url,\n        })),\n      ],\n    }));\n    setCommitsList([...tempCommits]);\n  };\n\n  // Function for fetching, parsing, and storing merge requests list data\n  const fetchMergeRequests = async () => {\n    const mergeRequestRes = await axios.get(\n      'http://localhost:5678/projects/2/merge_request/user/all'\n    );\n    // console.log(mergeRequestRes.data['merge_request_users_list']);\n\n    fetchErrorChecker(mergeRequestRes.data['response'], 'merge request');\n\n    // Generate a temporary merge request list to parse and set to Global Context API\n    const generateTempMR = () => {\n      const mrList = mergeRequestRes.data['merge_request_users_list'];\n      const tempMR = {};\n      // Loop through object key\n      for (let user in mrList) {\n        tempMR[user] = [];\n        // Loop through object item\n        for (let author of mrList[user]) {\n          tempMR[user].push({\n            author: author.author,\n            codeDiffId: author.code_diff_id,\n            comments: author.comments,\n            commitList: [\n              author.commit_list.map((commit) => ({\n                authorName: commit.author_name,\n                codeDiffId: commit.code_diff_id,\n                comittedDate: Date.parse(commit.committed_date),\n                committerName: commit.committer_name,\n                id: commit.id,\n                lineCounts: commit.line_counts,\n                shortId: commit.short_id,\n                title: commit.title,\n                webUrl: commit.web_url,\n                // Frontend defined variables Start --------------------------\n                // Initial score calculation\n                score:\n                  commit.line_counts.lines_added +\n                  commit.line_counts.lines_deleted * 0.1,\n                // Flag to ignore this commit\n                ignore: false,\n                // Frontend defined variables End --------------------------\n              })),\n            ],\n            createdDate: Date.parse(author.created_date),\n            description: author.description,\n            id: author.id,\n            iid: author.iid,\n            lineCounts: author.line_counts,\n            mergedBy: author.merged_by,\n            mergedDate: Date.parse(author.merged_date),\n            relatedIssueIid: author.related_issue_iid,\n            state: author.state,\n            title: author.title,\n            webUrl: author.web_url,\n            // Frontend defined variables Start --------------------------\n            // Initial score calculation\n            score:\n              author.line_counts.lines_added +\n              author.line_counts.lines_deleted * 0.1,\n            // Flag to ignore this MR\n            ignore: false,\n            // Frontend defined variables End --------------------------\n          });\n          tempMR[user]['weightedScore'] = 0;\n        }\n      }\n      // console.log(tempMR);\n      return tempMR;\n    };\n    setMergeRequestList(generateTempMR());\n  };\n\n  // Function for fetching, parsing, and storing notes list data\n  const fetchNotes = async () => {\n    const notesRes = await axios.get(\n      'http://localhost:5678/projects/2/comments/all'\n    );\n\n    fetchErrorChecker(notesRes.data['response'], 'notes');\n\n    const tempNotes = notesRes.data['notes'].map((note) => ({\n      author: note.author,\n      body: note.body,\n      createdDate: Date.parse(note.created_date),\n      id: note.id,\n      noteableId: note.noteable_id,\n      noteableIid: note.noteable_iid,\n      noteableType: note.noteable_type,\n      wordCount: note.word_count,\n      // Frontend defined variables Start --------------------------\n      // Initial score calculation\n      score: note.word_count * 1,\n      // Flag to ignore this note\n      ignore: false,\n      // Frontend defined variables End --------------------------\n    }));\n    setNotesList([...tempNotes]);\n  };\n\n  // Function for fetching, parsing, and storing comments list data\n  const fetchComments = async () => {\n    const commentsRes = await axios.get(\n      'http://localhost:5678/projects/2/comments/user/all'\n    );\n    fetchErrorChecker(commentsRes.data['response'], 'comments');\n    const generateTempComments = () => {\n      const commentList = commentsRes.data['notes'];\n      const tempComments = {};\n      for (let user in commentList) {\n        tempComments[user] = [];\n        for (let comment of commentList[user]) {\n          tempComments[user].push({\n            author: comment.author,\n            body: comment.body,\n            createdDate: Date.parse(comment.created_date),\n            id: comment.id,\n            noteableId: comment.noteable_id,\n            noteableIid: comment.noteable_iid,\n            noteableType: comment.noteable_type,\n            wordCount: comment.word_count,\n            // Frontend defined variables Start --------------------------\n            // Initial score calculation\n            score: 0,\n            // Flag to ignore this comment\n            ignore: false,\n            // Frontend defined variables End --------------------------\n          });\n          tempComments[user]['weightedScore'] = 0;\n        }\n      }\n      // console.log(tempComments);\n      return tempComments;\n    };\n    setCommentsList(generateTempComments());\n  };\n\n  /**\n   * Function that handles setting project ID and fetching all necessary data\n   * for analysis\n   * Parses all fetched data and store them in global context state\n   */\n  const handleAnalyze = async () => {\n    try {\n      setAnalyzing(true);\n\n      /**\n       * This setProjectIs() is important, it is needed for iteration 3, but this process calls\n       * an API in the backend that currently takes a long time (2+ minutes).\n       * This call is disabled for the demo on Monday.\n       */\n\n      await setProjectId();\n\n      await fetchMembers();\n      await fetchUsers();\n      await fetchCommits();\n      await fetchMergeRequests();\n      await fetchNotes();\n      await fetchComments();\n\n      setAnalyzing(false);\n      setRedirect(true);\n    } catch (error) {\n      setAnalyzing(false);\n      console.log(error);\n    }\n  };\n\n  const onCheckAllChange = (e) => {\n    setCheckedList(e.target.checked ? plainOptions : []);\n    setIndeterminate(false);\n    setCheckAll(e.target.checked);\n  };\n\n  // This component renders the batch processing button, select all (checkmarks)\n  // and also displays the progress bar\n  const batchButton = () => {\n    if (loading || analyzing) {\n      return null;\n    } else {\n      return (\n        <>\n          <Progress\n            style={{ marginTop: '10px' }}\n            strokeColor={{\n              from: '#108ee9',\n              to: '#87d068',\n            }}\n            percent={20.0}\n            status=\"active\"\n          />\n          <div\n            style={{\n              marginTop: '20px',\n              marginBottom: '20px',\n              display: 'flex',\n              justifyContent: 'flex-end',\n            }}\n          >\n            <Button type=\"primary\" key=\"batchanalyze\">\n              Batch Process\n            </Button>\n          </div>\n          <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n            <Checkbox\n              indeterminate={indeterminate}\n              onChange={onCheckAllChange}\n              checked={checkAll}\n            >\n              Select all\n            </Checkbox>\n          </div>\n        </>\n      );\n    }\n  };\n\n  if (redirect) {\n    return <Redirect to=\"/summary\" />;\n  } else {\n    return (\n      <div>\n        {batchButton()}\n        <List\n          style={{ marginTop: '20px' }}\n          className=\"demo-loadmore-list\"\n          itemLayout=\"horizontal\"\n          dataSource={filteredList}\n          renderItem={(item) => (\n            <List.Item\n              actions={[\n                <Button key=\"details\">Details</Button>,\n                <Button onClick={handleAnalyze} key=\"analyze\">\n                  Analyze\n                </Button>,\n                <Checkbox>Batch</Checkbox>,\n              ]}\n            >\n              <List.Item.Meta\n                avatar={\n                  <Avatar\n                    shape=\"square\"\n                    src=\"https://cdn4.iconfinder.com/data/icons/logos-and-brands-1/512/144_Gitlab_logo_logos-512.png\"\n                  />\n                }\n                title={item}\n                description=\"Web app for GitLab Analyzer\"\n              />\n            </List.Item>\n          )}\n        />\n      </div>\n    );\n  }\n};\n\nexport default Repo;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/EveryoneScore.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/login/BarStyles.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/ScoreCalculator.js",[],"/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/IndividualScore.js",["156"],"import React from \"react\";\nimport Data from './FloatBarData.json';\nimport './IndividualScore.css';\nimport { Card } from 'antd';\n\nvar FloatBarData = Data.users;\n\nfunction IndividualScore(props) {\n    return (\n       <div>\n            {FloatBarData.map((Detail) => {\n                if (Detail.username === props.children){\n                    <div>{Detail.username}</div>\n                    return (\n                        <div className = \"cardContainer\">\n                            <Card title = {Detail.score}>                \n                                Weighted Score\n                            </Card>\n                            <Card title = {Detail.number_commits}>                \n                                Number of Commits\n                            </Card>\n                            <Card title = {Detail.lines_of_code}>                \n                                Lines of Code\n                            </Card>\n                            <Card title = {Detail.number_issues}>                \n                                Issues & Reviews\n                            </Card>\n                        </div>\n                    );\n                }\n            })}\n        </div>\n    );\n}\n\nexport default IndividualScore;\n","/home/tkmin/sfuhome/cmpt373/gitlabanalyzer/client/src/components/floatbar/Scroll.js",[],{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","severity":1,"message":"162","line":2,"column":8,"nodeType":"163","messageId":"164","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"165","line":2,"column":23,"nodeType":"163","messageId":"164","endLine":2,"endColumn":27},{"ruleId":"166","severity":1,"message":"167","line":40,"column":6,"nodeType":"168","endLine":40,"endColumn":8,"suggestions":"169"},{"ruleId":"161","severity":1,"message":"170","line":29,"column":21,"nodeType":"163","messageId":"164","endLine":29,"endColumn":33},{"ruleId":"161","severity":1,"message":"171","line":30,"column":19,"nodeType":"163","messageId":"164","endLine":30,"endColumn":29},{"ruleId":"161","severity":1,"message":"172","line":134,"column":23,"nodeType":"163","messageId":"164","endLine":134,"endColumn":37},{"ruleId":"161","severity":1,"message":"173","line":10,"column":8,"nodeType":"163","messageId":"164","endLine":10,"endColumn":23},{"ruleId":"161","severity":1,"message":"174","line":31,"column":10,"nodeType":"163","messageId":"164","endLine":31,"endColumn":18},{"ruleId":"161","severity":1,"message":"175","line":33,"column":5,"nodeType":"163","messageId":"164","endLine":33,"endColumn":16},{"ruleId":"161","severity":1,"message":"176","line":34,"column":5,"nodeType":"163","messageId":"164","endLine":34,"endColumn":14},{"ruleId":"161","severity":1,"message":"177","line":35,"column":5,"nodeType":"163","messageId":"164","endLine":35,"endColumn":16},{"ruleId":"161","severity":1,"message":"178","line":36,"column":5,"nodeType":"163","messageId":"164","endLine":36,"endColumn":14},{"ruleId":"161","severity":1,"message":"179","line":37,"column":5,"nodeType":"163","messageId":"164","endLine":37,"endColumn":21},{"ruleId":"161","severity":1,"message":"180","line":38,"column":5,"nodeType":"163","messageId":"164","endLine":38,"endColumn":17},{"ruleId":"161","severity":1,"message":"181","line":11,"column":11,"nodeType":"163","messageId":"164","endLine":11,"endColumn":15},{"ruleId":"166","severity":1,"message":"182","line":23,"column":6,"nodeType":"168","endLine":23,"endColumn":13,"suggestions":"183"},{"ruleId":"161","severity":1,"message":"184","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"184","line":1,"column":17,"nodeType":"163","messageId":"164","endLine":1,"endColumn":26},{"ruleId":"161","severity":1,"message":"185","line":5,"column":10,"nodeType":"163","messageId":"164","endLine":5,"endColumn":20},{"ruleId":"161","severity":1,"message":"186","line":25,"column":10,"nodeType":"163","messageId":"164","endLine":25,"endColumn":21},{"ruleId":"161","severity":1,"message":"187","line":26,"column":10,"nodeType":"163","messageId":"164","endLine":26,"endColumn":21},{"ruleId":"161","severity":1,"message":"188","line":26,"column":23,"nodeType":"163","messageId":"164","endLine":26,"endColumn":37},{"ruleId":"189","severity":1,"message":"190","line":11,"column":40,"nodeType":"191","messageId":"192","endLine":11,"endColumn":42},"no-native-reassign",["193"],"no-negated-in-lhs",["194"],"no-unused-vars","'Config' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRepo'. Either include it or remove the dependency array.","ArrayExpression",["195"],"'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'setIssueSeries' is assigned a value but never used.","'ScoreCalculator' is defined but never used.","'sortType' is assigned a value but never used.","'membersList' is assigned a value but never used.","'usersList' is assigned a value but never used.","'commitsList' is assigned a value but never used.","'notesList' is assigned a value but never used.","'mergeRequestList' is assigned a value but never used.","'commentsList' is assigned a value but never used.","'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reList' and 'setFilteredList'. Either include them or remove the dependency array. If 'setFilteredList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],"'Component' is defined but never used.","'withStyles' is defined but never used.","'checkedList' is assigned a value but never used.","'fetchStatus' is assigned a value but never used.","'setFetchStatus' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},"Update the dependencies array to be: [setRepo]",{"range":"201","text":"202"},"Update the dependencies array to be: [reList, setFilteredList, value]",{"range":"203","text":"204"},[1343,1345],"[setRepo]",[552,559],"[reList, setFilteredList, value]"]