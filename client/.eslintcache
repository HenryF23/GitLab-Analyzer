[{"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js":"1","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js":"2","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js":"3","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js":"4","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js":"5","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js":"6","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js":"7","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js":"8","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js":"9","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js":"10","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js":"11","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js":"12","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js":"13","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js":"14","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js":"15","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js":"16","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js":"17","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js":"18","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SummaryPage.js":"19","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\SelectUser.js":"20","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\StackedBar.js":"21","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\BarGraph.js":"22","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\TablePage.js":"23","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\table\\FilterMenu.js":"24","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\ScoreCalculator.js":"25","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\FooterBar.js":"26","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\BatchPage.js":"27","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\batch\\BatchTable.js":"28","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\ConfigPage.js":"29","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\LogOut.js":"30"},{"size":328,"mtime":1613775547488,"results":"31","hashOfConfig":"32"},{"size":1350,"mtime":1615697430134,"results":"33","hashOfConfig":"32"},{"size":1898,"mtime":1615703906527,"results":"34","hashOfConfig":"32"},{"size":167,"mtime":1613793025076,"results":"35","hashOfConfig":"32"},{"size":1356,"mtime":1615434410008,"results":"36","hashOfConfig":"32"},{"size":1340,"mtime":1615696856908,"results":"37","hashOfConfig":"32"},{"size":3121,"mtime":1615696857063,"results":"38","hashOfConfig":"32"},{"size":520,"mtime":1615696857062,"results":"39","hashOfConfig":"32"},{"size":421,"mtime":1613793015687,"results":"40","hashOfConfig":"32"},{"size":1247,"mtime":1615529041956,"results":"41","hashOfConfig":"32"},{"size":12301,"mtime":1615753409641,"results":"42","hashOfConfig":"32"},{"size":4424,"mtime":1615450972779,"results":"43","hashOfConfig":"32"},{"size":3641,"mtime":1615697430135,"results":"44","hashOfConfig":"32"},{"size":5423,"mtime":1615450972707,"results":"45","hashOfConfig":"32"},{"size":2017,"mtime":1615614527534,"results":"46","hashOfConfig":"32"},{"size":463,"mtime":1615697454188,"results":"47","hashOfConfig":"32"},{"size":732,"mtime":1613793025323,"results":"48","hashOfConfig":"32"},{"size":828,"mtime":1613891466354,"results":"49","hashOfConfig":"32"},{"size":7974,"mtime":1615755388458,"results":"50","hashOfConfig":"32"},{"size":844,"mtime":1615703412011,"results":"51","hashOfConfig":"32"},{"size":1926,"mtime":1615755198652,"results":"52","hashOfConfig":"32"},{"size":1622,"mtime":1615675374186,"results":"53","hashOfConfig":"32"},{"size":4287,"mtime":1615702738098,"results":"54","hashOfConfig":"32"},{"size":2423,"mtime":1615614527564,"results":"55","hashOfConfig":"32"},{"size":152,"mtime":1615614527541,"results":"56","hashOfConfig":"32"},{"size":357,"mtime":1615450972661,"results":"57","hashOfConfig":"32"},{"size":409,"mtime":1615696857062,"results":"58","hashOfConfig":"32"},{"size":2496,"mtime":1615675279427,"results":"59","hashOfConfig":"32"},{"size":288,"mtime":1615696857063,"results":"60","hashOfConfig":"32"},{"size":651,"mtime":1615696857061,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"gdgb6x",{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\index.js",[],["132","133"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\App.js",["134"],"import React from 'react';\r\nimport Config from './components/Config';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport { Container } from '@material-ui/core';\r\nimport './App.css';\r\nimport './Shared.css';\r\nimport SummaryPage from './pages/SummaryPage';\r\nimport BatchPage from './pages/BatchPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport SearchPage from './pages/SearchPage';\r\nimport CommitPage from './pages/CommitPage';\r\nimport TablePage from './pages/TablePage';\r\nimport ConfigPage from './pages/ConfigPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route className=\"App\" path=\"/\" exact component={LoginPage} />\r\n          <Route className=\"App\" path=\"/repo\" exact component={SearchPage} />\r\n          <Route path=\"/reposearch\" component={SearchPage} />\r\n          <Container maxWidth=\"lg\">\r\n            <Route path=\"/summary\" exact component={SummaryPage} />\r\n            <Route path=\"/commits\" component={CommitPage} />\r\n            <Route path=\"/table\" component={TablePage} />\r\n            <Route path=\"/batch\" component={BatchPage} />\r\n            <Route path=\"/config\" component={ConfigPage} />\r\n          </Container>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\context\\AuthContext.js",["135","136"],"import React, { useState, createContext } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = (props) => {\r\n  const [user, setUser] = useState(null);\r\n  const [repo, setRepo] = useState(null);\r\n  const [incorrect, setIncorrect] = useState(false);\r\n  const [selectUser, setSelectUser] = useState('');\r\n  const [commitsList, setCommitsList] = useState([]);\r\n  const [membersList, setMembersList] = useState([]);\r\n  const [usersList, setUsersList] = useState([]);\r\n  const [notesList, setNotesList] = useState([]);\r\n  const [mergeRequestList, setMergeRequestList] = useState({});\r\n  const [commentsList, setCommentsList] = useState({});\r\n  const [selectMembersList, setSelectMembersList] = useState([]);\r\n  const [overviewScore, setOverviewScore] = useState({});\r\n  const [dailyArray, setDailyArray] = useState([]);\r\n  const [dateArray, setDateArray] = useState([]);\r\n  const [countArray, setCountArray] = useState([]);\r\n  const [combinedSeries, setCombinedSeries] = useState([\r\n    {\r\n      name: 'Merge Requests',\r\n      data: [],\r\n    },\r\n    {\r\n      name: 'Commits',\r\n      data: [],\r\n    },\r\n  ]);\r\n\r\n  const authContextValue = {\r\n    user,\r\n    setUser,\r\n    repo,\r\n    setRepo,\r\n    incorrect,\r\n    setIncorrect,\r\n    selectUser,\r\n    setSelectUser,\r\n    commitsList,\r\n    setCommitsList,\r\n    membersList,\r\n    setMembersList,\r\n    usersList,\r\n    setUsersList,\r\n    notesList,\r\n    setNotesList,\r\n    mergeRequestList,\r\n    setMergeRequestList,\r\n    commentsList,\r\n    setCommentsList,\r\n    selectMembersList,\r\n    setSelectMembersList,\r\n    overviewScore,\r\n    setOverviewScore,\r\n    dailyArray, \r\n    setDailyArray,\r\n    dateArray,\r\n    setDateArray,\r\n    countArray,\r\n    setCountArray\r\n  };\r\n  return <AuthContext.Provider value={authContextValue} {...props} />;\r\n};\r\n\r\nconst useAuth = () => React.useContext(AuthContext);\r\n\r\nexport { AuthProvider, useAuth };\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Config.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\LoginPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Header.js",["137"],"import React from 'react';\r\nimport { Navbar, Nav, Link } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport FloatBar from './floatbar/FloatBar';\r\nimport Logo from './Logo';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div>\r\n      <Logo />\r\n      <FloatBar />\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <LinkContainer className=\"marginRight\" to=\"/summary\">\r\n              <Nav.Link>Summary</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer className=\"marginRight\" to=\"/commits\">\r\n              <Nav.Link>Commits & MRs</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer className=\"marginRight\" to=\"/table\">\r\n              <Nav.Link>Issues & Reviews</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer className=\"marginRight\" to=\"/batch\">\r\n              <Nav.Link>Batch Processing</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer className=\"marginRight\" to=\"/config\">\r\n              <Nav.Link>Config</Nav.Link>\r\n            </LinkContainer>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SearchPage.js",["138"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport '../Shared.css';\r\nimport Logo from '../components/Logo';\r\nimport SearchBar from '../components/login/SearchBar';\r\nimport { Alert, Spin } from 'antd';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport Repo from '../components/login/Repo';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router';\r\nimport LogOut from '../components/LogOut';\r\n\r\nfunction SearchPage() {\r\n  const [loading, setLoading] = useState(false);\r\n  const [analyzing, setAnalyzing] = useState(false);\r\n  const { user, setRepo } = useAuth();\r\n  const [reList, setReList] = useState([]);\r\n  const [filteredList, setFilteredList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getRepos = async () => {\r\n      setLoading(true);\r\n      const repoList = await axios.get('http://localhost:5678/projects');\r\n      setRepo(repoList.data.projects);\r\n      setReList([\r\n        ...repoList.data.projects,\r\n        'Administrator / Earth GitLab 373',\r\n        'Administrator / Mars GitLab 373',\r\n        'Administrator / Jupiter GitLab 373',\r\n      ]);\r\n      setFilteredList([\r\n        ...repoList.data.projects,\r\n        'Administrator / Earth GitLab 373',\r\n        'Administrator / Mars GitLab 373',\r\n        'Administrator / Jupiter GitLab 373',\r\n      ]);\r\n      setLoading(false);\r\n    };\r\n    getRepos();\r\n  }, []);\r\n\r\n  const loadingContainer = () => {\r\n    if (loading) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Loading ...\">\r\n            <Alert\r\n              message=\"Loading repository list\"\r\n              description=\"Please wait while we retrieve your repository information.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else if (analyzing && user) {\r\n      return (\r\n        <div style={{ margin: '50px' }}>\r\n          <Spin tip=\"Analyzing...\">\r\n            <Alert\r\n              message=\"Analyzing selected repository\"\r\n              description=\"Please wait while we analyze your selected repository.\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>\r\n        </div>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  if (user) {\r\n    return (\r\n      <div className=\"main_container\">\r\n        <div className=\"rightalign\">\r\n          <LogOut />\r\n        </div>\r\n        <div className=\"App\">\r\n          <div className=\"center\">\r\n            <div className=\"m-bot\">\r\n              <Logo />\r\n            </div>\r\n            <SearchBar\r\n              reList={reList}\r\n              setLoading={setLoading}\r\n              setFilteredList={setFilteredList}\r\n              filteredList={filteredList}\r\n            />\r\n            {loadingContainer()}\r\n            <Repo\r\n              setAnalyzing={setAnalyzing}\r\n              loading={loading}\r\n              analyzing={analyzing}\r\n              filteredList={filteredList}\r\n              setFilteredList={setFilteredList}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\CommitPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\Logo.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\SearchBar.js",["139","140"],"import React, { useState, useEffect } from 'react';\r\nimport './SearchBar.css';\r\nimport { Input } from 'antd';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nconst { Search } = Input;\r\n\r\nconst SearchBarComp = ({ reList, setFilteredList }) => {\r\n  const [value, setValue] = useState('');\r\n\r\n  const { user } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (value === '') {\r\n      setFilteredList(reList);\r\n    } else {\r\n      setFilteredList(\r\n        reList.filter((repo) =>\r\n          repo.toLowerCase().includes(value.toLowerCase())\r\n        )\r\n      );\r\n    }\r\n  }, [value]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleOnChange = async (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"bar_container\">\r\n        <form className=\"flex\" onSubmit={handleSubmit}>\r\n          <Search\r\n            value={value}\r\n            style={{ width: '650px' }}\r\n            placeholder=\"Search a repository\"\r\n            allowClear\r\n            enterButton=\"Search\"\r\n            size=\"large\"\r\n            onChange={handleOnChange}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBarComp;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\Repo.js",["141","142","143","144"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\LoginBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\FloatBar.js",["145","146","147","148","149","150","151","152"],"import React, { useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Select, Button, DatePicker, notification } from 'antd';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport EveryoneScore from './EveryoneScore.js';\r\nimport Data from './FloatBarData.json';\r\nimport moment from 'moment';\r\nimport Settings from './Settings.json';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport ScoreCalculator from './ScoreCalculator';\r\nimport { CheckCircleOutlined } from '@ant-design/icons';\r\nimport { useAuth } from '../../context/AuthContext';\r\n\r\nimport './FloatBar.css';\r\n\r\nvar FloatBarData = Data.users;\r\nvar Dates = Settings.dates;\r\n\r\nconst { Option } = Select;\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst copySuccessful = () => {\r\n  notification.open({\r\n    message: 'Copy Successful!',\r\n    icon: <CheckCircleOutlined style={{ color: '#00D100' }} />,\r\n    duration: 1,\r\n  });\r\n};\r\n\r\nfunction FloatBar() {\r\n  const [sortType, setSortType] = React.useState('');\r\n  const {\r\n    membersList,\r\n    usersList,\r\n    commitsList,\r\n    notesList,\r\n    mergeRequestList,\r\n    commentsList,\r\n  } = useAuth();\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <div className=\"floatbar-container\">\r\n      <div className=\"floatbaralign\">\r\n        <EveryoneScore />\r\n      </div>\r\n      <div className=\"floatbar-functions\">\r\n        <Grid\r\n          container\r\n          className=\"sth\"\r\n          spacing={2}\r\n          direction=\"column\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <div className=\"daterange\">\r\n              <RangePicker\r\n                defaultValue={[null, moment()]}\r\n                format=\"YYYY/MM/DD hh:mm:ss\"\r\n                ranges={{\r\n                  Today: [moment(), moment()],\r\n                  'Iteration 1': [\r\n                    moment(Dates[0].startdate),\r\n                    moment(Dates[0].enddate),\r\n                  ],\r\n                  'Iteration 2': [\r\n                    moment(Dates[1].startdate),\r\n                    moment(Dates[1].enddate),\r\n                  ],\r\n                  'Iteration 3': [\r\n                    moment(Dates[2].startdate),\r\n                    moment(Dates[2].enddate),\r\n                  ],\r\n                }}\r\n                showTime\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div className=\"selectSort\">\r\n              <Select\r\n                placeholder=\"Sort\"\r\n                style={{ width: 150 }}\r\n                onChange={(value) => setSortType(value)}\r\n              >\r\n                <Option value=\"Alphabetical\">Alphabetical</Option>\r\n                <Option value=\"Low to High\">Low to High</Option>\r\n                <Option value=\"High to Low\">High to Low</Option>\r\n              </Select>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <CopyToClipboard\r\n              format={'text/plain'}\r\n              text={\r\n                '\\tWeighted Score\\tNumber of Commits\\tLines of Code\\tIssues & Reviews\\n' +\r\n                JSON.stringify(FloatBarData)\r\n                  .replaceAll('},{', '\\r\\n')\r\n                  .replace(/[,]/g, '\\t')\r\n                  .replace(/[[{}\"\\]]/g, '')\r\n                  .replace(/[^\\n\\t]+(?=):/g, '')\r\n              }\r\n            >\r\n              <Button style={{ width: 150 }} onClick={copySuccessful}>\r\n                Copy\r\n                <CopyOutlined className=\"copyicon\" />\r\n              </Button>\r\n            </CopyToClipboard>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FloatBar;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\commits\\CommitBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\EveryoneScore.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\IndividualScore.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\login\\BarStyles.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\Scroll.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\SummaryPage.js",["153","154","155","156","157","158","159","160","161"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\SelectUser.js",["162"],"import React, { useState } from 'react';\r\nimport { Select } from 'antd';\r\nimport IndividualScore from './floatbar/IndividualScore';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport './SelectUser.css';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction SelectUser() {\r\n  const { selectMembersList, selectUser, setSelectUser } = useAuth();\r\n  return (\r\n    <div className=\"selectUser\">\r\n      <Select\r\n        defaultValue={selectMembersList[0]}\r\n        style={{ width: 200 }}\r\n        onChange={(value) => {\r\n          setSelectUser(value);\r\n        }}\r\n        showSearch\r\n      >\r\n        {selectMembersList.map((Detail) => {\r\n          return <Option value={Detail}>{Detail}</Option>;\r\n        })}\r\n      </Select>\r\n      <IndividualScore user={selectUser}>{selectUser}</IndividualScore>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SelectUser;\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\StackedBar.js",["163"],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\summary\\BarGraph.js",["164"],"import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\n// adapted from: https://apexcharts.com/react-chart-demos/column-charts/stacked/\r\n\r\nclass BarGraph extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n      \r\n        options: {\r\n          colors: [this.props.colors],\r\n          stroke: {\r\n            show: true,\r\n            curve: 'smooth',\r\n            lineCap: 'butt',\r\n            colors: [this.props.stroke],\r\n            width: 1,\r\n            dashArray: 0,      \r\n        },\r\n          chart: {\r\n            toolbar: {\r\n              show: false\r\n            },\r\n            type: 'bar',\r\n            height: 350,\r\n          },\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          responsive: [{\r\n            breakpoint: 480,\r\n            options: {\r\n              legend: {\r\n                position: 'bottom',\r\n                offsetX: -10,\r\n                offsetY: 0\r\n              }\r\n            }\r\n          }],\r\n          plotOptions: {\r\n            bar: {\r\n              borderRadius: 8,\r\n              horizontal: false,\r\n              endingShape: 'flat'\r\n            }\r\n          },\r\n          xaxis: {\r\n            categories: ['Jan', 'Feb'],\r\n          },\r\n          fill: {\r\n            type: 'solid',\r\n            opacity: 1\r\n          }\r\n        },\r\n      };\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div id=\"chart\">\r\n          <Chart options={this.state.options} series={this.props.series} type=\"bar\" height={200} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default BarGraph","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\TablePage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\table\\FilterMenu.js",["165"],"import React from 'react'\r\n\r\nimport { Checkbox } from 'antd';\r\nimport { InputNumber } from 'antd';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst useStyles = makeStyles({\r\n    button: {\r\n      paddingTop: '5px',\r\n      paddingBottom: '20px',\r\n      textAlign: 'left'\r\n    },\r\n    grid: {\r\n        width: '100%',\r\n    },\r\n    filterText: {\r\n      paddingTop: '15px'\r\n    },\r\n  });\r\n\r\nfunction onChange(e) {\r\n    console.log(`checked = ${e.target.checked}`);\r\n}\r\n\r\nconst FilterMenu = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Grid container className={classes.grid} direction=\"column\"\r\n          alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <h4 className={classes.filterText}><b>Filter</b></h4>\r\n                    <h6 className={classes.filterText}>Word Count</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <p className={classes.filterText}>Min&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Max</p>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <InputNumber className={classes.input} min={0} max={100} defaultValue={0} onChange={onChange} />\r\n                    <InputNumber className={classes.input}min={0} max={100} defaultValue={100} onChange={onChange} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h6 className={classes.filterText}>Ownership</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Checkbox className={classes.button} onChange={onChange} >Own</Checkbox>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Checkbox className={classes.button} onChange={onChange} >Other</Checkbox>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <h6>Type</h6>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Checkbox className={classes.button} onChange={onChange} >Code<br/>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Review</Checkbox>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Checkbox className={classes.button} onChange={onChange} >Issue</Checkbox>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FilterMenu\r\n","C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\floatbar\\ScoreCalculator.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\FooterBar.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\BatchPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\batch\\BatchTable.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\pages\\ConfigPage.js",[],"C:\\Users\\Andrew\\gitlabanalyzer\\client\\src\\components\\LogOut.js",[],{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":14},{"ruleId":"170","severity":1,"message":"174","line":21,"column":10,"nodeType":"172","messageId":"173","endLine":21,"endColumn":24},{"ruleId":"170","severity":1,"message":"175","line":21,"column":26,"nodeType":"172","messageId":"173","endLine":21,"endColumn":43},{"ruleId":"170","severity":1,"message":"176","line":2,"column":23,"nodeType":"172","messageId":"173","endLine":2,"endColumn":27},{"ruleId":"177","severity":1,"message":"178","line":40,"column":6,"nodeType":"179","endLine":40,"endColumn":8,"suggestions":"180"},{"ruleId":"170","severity":1,"message":"181","line":11,"column":11,"nodeType":"172","messageId":"173","endLine":11,"endColumn":15},{"ruleId":"177","severity":1,"message":"182","line":23,"column":6,"nodeType":"179","endLine":23,"endColumn":13,"suggestions":"183"},{"ruleId":"170","severity":1,"message":"184","line":28,"column":10,"nodeType":"172","messageId":"173","endLine":28,"endColumn":21},{"ruleId":"170","severity":1,"message":"185","line":29,"column":10,"nodeType":"172","messageId":"173","endLine":29,"endColumn":21},{"ruleId":"170","severity":1,"message":"186","line":29,"column":23,"nodeType":"172","messageId":"173","endLine":29,"endColumn":37},{"ruleId":"170","severity":1,"message":"187","line":45,"column":9,"nodeType":"172","messageId":"173","endLine":45,"endColumn":21},{"ruleId":"170","severity":1,"message":"188","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":23},{"ruleId":"170","severity":1,"message":"189","line":31,"column":10,"nodeType":"172","messageId":"173","endLine":31,"endColumn":18},{"ruleId":"170","severity":1,"message":"190","line":33,"column":5,"nodeType":"172","messageId":"173","endLine":33,"endColumn":16},{"ruleId":"170","severity":1,"message":"191","line":34,"column":5,"nodeType":"172","messageId":"173","endLine":34,"endColumn":14},{"ruleId":"170","severity":1,"message":"192","line":35,"column":5,"nodeType":"172","messageId":"173","endLine":35,"endColumn":16},{"ruleId":"170","severity":1,"message":"193","line":36,"column":5,"nodeType":"172","messageId":"173","endLine":36,"endColumn":14},{"ruleId":"170","severity":1,"message":"194","line":37,"column":5,"nodeType":"172","messageId":"173","endLine":37,"endColumn":21},{"ruleId":"170","severity":1,"message":"195","line":38,"column":5,"nodeType":"172","messageId":"173","endLine":38,"endColumn":17},{"ruleId":"170","severity":1,"message":"196","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"197","line":30,"column":23,"nodeType":"172","messageId":"173","endLine":30,"endColumn":36},{"ruleId":"170","severity":1,"message":"198","line":30,"column":38,"nodeType":"172","messageId":"173","endLine":30,"endColumn":55},{"ruleId":"170","severity":1,"message":"199","line":30,"column":57,"nodeType":"172","messageId":"173","endLine":30,"endColumn":77},{"ruleId":"170","severity":1,"message":"200","line":30,"column":92,"nodeType":"172","messageId":"173","endLine":30,"endColumn":106},{"ruleId":"170","severity":1,"message":"201","line":31,"column":21,"nodeType":"172","messageId":"173","endLine":31,"endColumn":33},{"ruleId":"170","severity":1,"message":"202","line":32,"column":19,"nodeType":"172","messageId":"173","endLine":32,"endColumn":29},{"ruleId":"170","severity":1,"message":"203","line":38,"column":10,"nodeType":"172","messageId":"173","endLine":38,"endColumn":20},{"ruleId":"170","severity":1,"message":"204","line":206,"column":23,"nodeType":"172","messageId":"173","endLine":206,"endColumn":37},{"ruleId":"170","severity":1,"message":"205","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"206","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"206","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":26},{"ruleId":"170","severity":1,"message":"207","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":20},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'Config' is defined but never used.","Identifier","unusedVar","'combinedSeries' is assigned a value but never used.","'setCombinedSeries' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setRepo'. Either include it or remove the dependency array.","ArrayExpression",["210"],"'user' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'reList' and 'setFilteredList'. Either include them or remove the dependency array. If 'setFilteredList' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["211"],"'checkedList' is assigned a value but never used.","'fetchStatus' is assigned a value but never used.","'setFetchStatus' is assigned a value but never used.","'setProjectId' is assigned a value but never used.","'ScoreCalculator' is defined but never used.","'sortType' is assigned a value but never used.","'membersList' is assigned a value but never used.","'usersList' is assigned a value but never used.","'commitsList' is assigned a value but never used.","'notesList' is assigned a value but never used.","'mergeRequestList' is assigned a value but never used.","'commentsList' is assigned a value but never used.","'useEffect' is defined but never used.","'setSelectUser' is assigned a value but never used.","'selectMembersList' is assigned a value but never used.","'setSelectMembersList' is assigned a value but never used.","'setCommitsList' is assigned a value but never used.","'setStartDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'dailyArray' is assigned a value but never used.","'setIssueSeries' is assigned a value but never used.","'useState' is defined but never used.","'Component' is defined but never used.","'withStyles' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [setRepo]",{"range":"216","text":"217"},"Update the dependencies array to be: [reList, setFilteredList, value]",{"range":"218","text":"219"},[1382,1384],"[setRepo]",[574,581],"[reList, setFilteredList, value]"]